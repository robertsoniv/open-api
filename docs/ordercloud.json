{
    "openapi": "3.0.0",
    "info": {
        "title": "OrderCloud",
        "description": "OrderCloud is an awesome C# platform API for making eCommerce applications. It is NOT a complete solution. It's designed to be used as the backend component with various other integrations and services.",
        "version": "1.0.89",
        "contact": {
            "name": "OrderCloud",
            "url": "http://ordercloud.io",
            "email": "ordercloud@four51.com"
        }
    },
    "servers": [{
        "url": "https://api.ordercloud.io/v1",
        "description": "Main API Server (OrderCloud resources requiring an access token)"
    }],
    "tags": [{
            "name": "Address",
            "description": "Addresses are used for the purposes of billing and shipping an order.  An address may belong to a list that can be shared among many users if appropriate."
        },
        {
            "name": "Admin Address",
            "description": ""
        },
        {
            "name": "Admin User Group",
            "description": ""
        },
        {
            "name": "Admin User",
            "description": "Users on an Organization level are users that have administrative access to things like adding users, creating catalogs, processing orders or creating products. These users are not specific to a buyer company."
        },
        {
            "name": "Api Client",
            "description": ""
        },
        {
            "name": "Approval Rule",
            "description": "Approval rules are used to verify the integrity of an order.  Common examples include orders requiring managerial approval, approval for orders that contain a specific product category, approval for quantity thresholds or approval for orders that exceed a specific price.  Properties are also available to control the triggers and timing for processing approvals whether parallel to another rule, or in succession of a previous rule."
        },
        {
            "name": "Buyer",
            "description": "Buyers, or customers, are the organizations that view the categories and products and place orders."
        },
        {
            "name": "Catalog",
            "description": "A Catalog represents a group of categories used to group and place content for a specific audience. All buyers are issued and assigned a default catalog upon creation. Catalogs can be shared between buyers using assignments."
        },
        {
            "name": "Category",
            "description": "Categories are used within a catalog to group and place content for a specific audience. Content can be in the form of another category, nested categories, products or HTML."
        },
        {
            "name": "Cost Center",
            "description": "A cost center is used to allocate organizational expenditures.  Different businesses call these by different names such as \"allocation codes\" or \"charge back codes\", but the basic purpose is the same - to allocate an expense back to someone or some department of an organization."
        },
        {
            "name": "Credit Card",
            "description": "Credit cards are used as a payment method for an order.  A user may have access to one or many credit cards for personal spend or group spending.<br/><br/>Credit Cards may be saved and assigned to members of an organization for use during purchase."
        },
        {
            "name": "Impersonation Config",
            "description": ""
        },
        {
            "name": "Incrementor",
            "description": "An incrementor is used to add an atomically incremented number to your object IDs. For example, \"aprefix-{myIncrementorID}\", will yield an order ID of aprefix-10010."
        },
        {
            "name": "Line Item",
            "description": "A Line Item represents a single line on an Order. At a minimum, it contains a single Product SKU and a quantity. A line item may also include Spec values, a Cost Center, shipping details, date needed, and other custom information."
        },
        {
            "name": "Me",
            "description": "\"Me\" is a container for read-only endpoints that return a filtered view of things that the current buyer user is allowed to see, i.e. things that they are assigned to either directly or as a member of a buyer organization or user group. It also provides ways for a user to update or change their own information."
        },
        {
            "name": "Message Sender",
            "description": ""
        },
        {
            "name": "Order",
            "description": "An Order represents a business transaction between two parties. It typically consists of a collection of Line Items, a Payment Method, Tax and Shipping information, etc. The OrderCloud platform defines various \"actions\" that can be performed against Orders, such as Submit, Approve, Ship, etc. These actions transform the state of the order and often trigger external events such as financial transactions."
        },
        {
            "name": "Forgotten Password",
            "description": ""
        },
        {
            "name": "Payment",
            "description": ""
        },
        {
            "name": "Price Schedule",
            "description": "Price schedules allow the same product to be sold across multiple channels.  A price schedule may include quantity price breaks, min and max quantity per order, whether to apply tax or shipping calculations, or to what type of order the price schedule applies."
        },
        {
            "name": "Product Facet",
            "description": "A product facet is an extended property (value on product.xp) designated to participate in faceted navigation. Buyer list endpoints for products will populate and return Meta.Facets, a collection of facet names, values, and counts. Counts represent the total results that would be returned should the current set be further filted on that facet value."
        },
        {
            "name": "Product",
            "description": "A Product represents a physical, digital, or absract good that is offered for sale by a seller organization and is purchase-able by Buyer Users via an Order. <br/><br/>Products can be a static SKU or a version of a static SKU, known as a Variant.  For example, a variant is often a size or color choice that drives a different product SKU.<br/><br/>Products may also have inventory associated with them and various inventory attributes like quantity available and re-order notifications."
        },
        {
            "name": "Promotion",
            "description": "Promotions are used to reduce the cost of a line item or an order.  Promotions can have redemption rules that can be applied for available dates, occurences and value.<br/><br/>Promotions can be assigned to Products, Categories, Buyers, UserGroups and Users for redemption."
        },
        {
            "name": "Security Profile",
            "description": ""
        },
        {
            "name": "Shipment",
            "description": "A Shipment is a grouping of one or more Line Items from one or more Orders that is physically packaged and delivered to the Buyer as a single unit. It is typically created by the Seller after the Order is submitted as part of the fulfillment process."
        },
        {
            "name": "Spec",
            "description": "Specs are used to capture user input when adding a Product to an Order. At its simplest, a spec is a name/value pair. A spec value may have a price markup or markdown associated with it. In more advanced scenarios, specs can drive the product SKU. For example, a product may be available in 3 colors and 3 sizes and therefore have a total of 9 SKUs. **The OrderCloud platform will choose the correct SKU based on the user-selected color and size specs**."
        },
        {
            "name": "Spending Account",
            "description": "Spending Accounts are funds given to users by a managing entity and are managed as part of a user's account.  These funds are generally used as \"corporate dollars\", \"rewards dollars\", or \"gift cards\".<br/><br/>They can be used to pay for all of or part of an order with parameters that control account expiration, balance available, balance renewal, user access and overdraft.<br/><br/>Multiple spending accounts can be assigned to a member of an organization and applied to all transactions, but only one can be used as a payment method.<br/><br/>When multiple Spending Accounts are used on a transaction each is deducted individually."
        },
        {
            "name": "Supplier Address",
            "description": ""
        },
        {
            "name": "Supplier",
            "description": "Suppliers are the organizations that supply products distributed by Seller oganizations."
        },
        {
            "name": "Supplier User Group",
            "description": "User Groups are used to streamline the management of users within an application.  By placing like users in groups, you can filter content, define order management rules, and manage changes much more easily than trying to account for individual users."
        },
        {
            "name": "Supplier User",
            "description": "A user is a person with access to the application.  The properties of a user define who they are and what they are able to do with their login to the application."
        },
        {
            "name": "User Group",
            "description": "User Groups are used to streamline the management of users within an application.  By placing like users in groups, you can filter content, define order management rules, and manage changes much more easily than trying to account for individual users."
        },
        {
            "name": "User",
            "description": "A user is a person with access to the application.  The properties of a user define who they are and what they are able to do with their login to the application."
        }
    ],
    "components": {
        "securitySchemes": {
            "OAuth2": {
                "type": "oauth2",
                "flows": {
                    "password": {
                        "tokenUrl": "https://auth.ordercloud.io/oauth/token",
                        "scopes": {
                            "AddressAdmin": "",
                            "AddressReader": "",
                            "AdminAddressAdmin": "",
                            "AdminAddressReader": "",
                            "AdminUserAdmin": "",
                            "AdminUserGroupAdmin": "",
                            "AdminUserGroupReader": "",
                            "AdminUserReader": "",
                            "ApiClientAdmin": "",
                            "ApiClientReader": "",
                            "ApprovalRuleAdmin": "",
                            "ApprovalRuleReader": "",
                            "BuyerAdmin": "",
                            "BuyerImpersonation": "",
                            "BuyerReader": "",
                            "BuyerUserAdmin": "",
                            "BuyerUserReader": "",
                            "CatalogAdmin": "",
                            "CatalogReader": "",
                            "CategoryAdmin": "",
                            "CategoryReader": "",
                            "CostCenterAdmin": "",
                            "CostCenterReader": "",
                            "CreditCardAdmin": "",
                            "CreditCardReader": "",
                            "FullAccess": "",
                            "GrantForAnyRole": "",
                            "IncrementorAdmin": "",
                            "IncrementorReader": "",
                            "InventoryAdmin": "",
                            "MeAddressAdmin": "",
                            "MeAdmin": "",
                            "MeCreditCardAdmin": "",
                            "MessageConfigAssignmentAdmin": "",
                            "MeXpAdmin": "",
                            "OrderAdmin": "",
                            "OrderReader": "",
                            "OverrideShipping": "",
                            "OverrideTax": "",
                            "OverrideUnitPrice": "",
                            "PasswordReset": "",
                            "PriceScheduleAdmin": "",
                            "PriceScheduleReader": "",
                            "ProductAdmin": "",
                            "ProductAssignmentAdmin": "",
                            "ProductFacetAdmin": "",
                            "ProductFacetReader": "",
                            "ProductReader": "",
                            "PromotionAdmin": "",
                            "PromotionReader": "",
                            "SetSecurityProfile": "",
                            "ShipmentAdmin": "",
                            "ShipmentReader": "",
                            "Shopper": "",
                            "SpendingAccountAdmin": "",
                            "SpendingAccountReader": "",
                            "SupplierAddressAdmin": "",
                            "SupplierAddressReader": "",
                            "SupplierAdmin": "",
                            "SupplierReader": "",
                            "SupplierUserAdmin": "",
                            "SupplierUserGroupAdmin": "",
                            "SupplierUserGroupReader": "",
                            "SupplierUserReader": "",
                            "UnsubmittedOrderReader": "",
                            "UserGroupAdmin": "",
                            "UserGroupReader": ""
                        }
                    },
                    "clientCredentials": {
                        "tokenUrl": "https://auth.ordercloud.io/oauth/token",
                        "scopes": {
                            "AddressAdmin": "",
                            "AddressReader": "",
                            "AdminAddressAdmin": "",
                            "AdminAddressReader": "",
                            "AdminUserAdmin": "",
                            "AdminUserGroupAdmin": "",
                            "AdminUserGroupReader": "",
                            "AdminUserReader": "",
                            "ApiClientAdmin": "",
                            "ApiClientReader": "",
                            "ApprovalRuleAdmin": "",
                            "ApprovalRuleReader": "",
                            "BuyerAdmin": "",
                            "BuyerImpersonation": "",
                            "BuyerReader": "",
                            "BuyerUserAdmin": "",
                            "BuyerUserReader": "",
                            "CatalogAdmin": "",
                            "CatalogReader": "",
                            "CategoryAdmin": "",
                            "CategoryReader": "",
                            "CostCenterAdmin": "",
                            "CostCenterReader": "",
                            "CreditCardAdmin": "",
                            "CreditCardReader": "",
                            "FullAccess": "",
                            "GrantForAnyRole": "",
                            "IncrementorAdmin": "",
                            "IncrementorReader": "",
                            "InventoryAdmin": "",
                            "MeAddressAdmin": "",
                            "MeAdmin": "",
                            "MeCreditCardAdmin": "",
                            "MessageConfigAssignmentAdmin": "",
                            "MeXpAdmin": "",
                            "OrderAdmin": "",
                            "OrderReader": "",
                            "OverrideShipping": "",
                            "OverrideTax": "",
                            "OverrideUnitPrice": "",
                            "PasswordReset": "",
                            "PriceScheduleAdmin": "",
                            "PriceScheduleReader": "",
                            "ProductAdmin": "",
                            "ProductAssignmentAdmin": "",
                            "ProductFacetAdmin": "",
                            "ProductFacetReader": "",
                            "ProductReader": "",
                            "PromotionAdmin": "",
                            "PromotionReader": "",
                            "SetSecurityProfile": "",
                            "ShipmentAdmin": "",
                            "ShipmentReader": "",
                            "Shopper": "",
                            "SpendingAccountAdmin": "",
                            "SpendingAccountReader": "",
                            "SupplierAddressAdmin": "",
                            "SupplierAddressReader": "",
                            "SupplierAdmin": "",
                            "SupplierReader": "",
                            "SupplierUserAdmin": "",
                            "SupplierUserGroupAdmin": "",
                            "SupplierUserGroupReader": "",
                            "SupplierUserReader": "",
                            "UnsubmittedOrderReader": "",
                            "UserGroupAdmin": "",
                            "UserGroupReader": ""
                        }
                    }
                }
            }
        },
        "schemas": {
            "AccessToken": {
                "type": "object",
                "example": {
                    "access_token": "",
                    "expires_in": 0,
                    "token_type": "",
                    "refresh_token": ""
                },
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "expires_in": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "token_type": {
                        "type": "string"
                    },
                    "refresh_token": {
                        "type": "string"
                    }
                }
            },
            "Address": {
                "type": "object",
                "example": {
                    "ID": "",
                    "DateCreated": "2018-01-01T00:00:00-06:00",
                    "CompanyName": "",
                    "FirstName": "",
                    "LastName": "",
                    "Street1": "",
                    "Street2": "",
                    "City": "",
                    "State": "",
                    "Zip": "",
                    "Country": "",
                    "Phone": "",
                    "AddressName": "",
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "DateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "CompanyName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "FirstName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "LastName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Street1": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Street2": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "City": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "State": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Zip": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Country": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "Phone": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "AddressName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "AddressAssignment": {
                "type": "object",
                "example": {
                    "AddressID": "",
                    "UserID": "",
                    "UserGroupID": "",
                    "IsShipping": false,
                    "IsBilling": false
                },
                "properties": {
                    "AddressID": {
                        "type": "string"
                    },
                    "UserID": {
                        "type": "string"
                    },
                    "UserGroupID": {
                        "type": "string"
                    },
                    "IsShipping": {
                        "type": "boolean"
                    },
                    "IsBilling": {
                        "type": "boolean"
                    }
                }
            },
            "ApiClient": {
                "type": "object",
                "example": {
                    "ID": "",
                    "ClientSecret": "",
                    "AccessTokenDuration": 0,
                    "Active": false,
                    "AppName": "",
                    "RefreshTokenDuration": 0,
                    "DefaultContextUserName": "",
                    "xp": {},
                    "AllowAnyBuyer": false,
                    "AllowAnySupplier": false,
                    "AllowSeller": false,
                    "IsAnonBuyer": false,
                    "AssignedBuyerCount": 0,
                    "AssignedSupplierCount": 0
                },
                "properties": {
                    "ID": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ClientSecret": {
                        "type": "string"
                    },
                    "AccessTokenDuration": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Active": {
                        "type": "boolean"
                    },
                    "AppName": {
                        "type": "string"
                    },
                    "RefreshTokenDuration": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "DefaultContextUserName": {
                        "type": "string"
                    },
                    "xp": {
                        "type": "object"
                    },
                    "AllowAnyBuyer": {
                        "type": "boolean"
                    },
                    "AllowAnySupplier": {
                        "type": "boolean"
                    },
                    "AllowSeller": {
                        "type": "boolean"
                    },
                    "IsAnonBuyer": {
                        "type": "boolean"
                    },
                    "AssignedBuyerCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "AssignedSupplierCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "ApiClientAssignment": {
                "type": "object",
                "example": {
                    "ApiClientID": "",
                    "BuyerID": "",
                    "SupplierID": ""
                },
                "properties": {
                    "ApiClientID": {
                        "type": "string"
                    },
                    "BuyerID": {
                        "type": "string"
                    },
                    "SupplierID": {
                        "type": "string"
                    }
                }
            },
            "ApprovalRule": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "Description": "",
                    "ApprovingGroupID": "",
                    "RuleExpression": "",
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Description": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "ApprovingGroupID": {
                        "type": "string"
                    },
                    "RuleExpression": {
                        "type": "string",
                        "maxLength": 400
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "Buyer": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "DefaultCatalogID": "",
                    "Active": false,
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "DefaultCatalogID": {
                        "type": "string"
                    },
                    "Active": {
                        "type": "boolean"
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "BuyerAddress": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Shipping": false,
                    "Billing": false,
                    "Editable": false,
                    "DateCreated": "2018-01-01T00:00:00-06:00",
                    "CompanyName": "",
                    "FirstName": "",
                    "LastName": "",
                    "Street1": "",
                    "Street2": "",
                    "City": "",
                    "State": "",
                    "Zip": "",
                    "Country": "",
                    "Phone": "",
                    "AddressName": "",
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string",
                        "readOnly": true
                    },
                    "Shipping": {
                        "type": "boolean"
                    },
                    "Billing": {
                        "type": "boolean"
                    },
                    "Editable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "DateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "CompanyName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "FirstName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "LastName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Street1": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Street2": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "City": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "State": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Zip": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Country": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "Phone": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "AddressName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "BuyerCreditCard": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Editable": false,
                    "Token": "",
                    "DateCreated": "2018-01-01T00:00:00-06:00",
                    "CardType": "",
                    "PartialAccountNumber": "",
                    "CardholderName": "",
                    "ExpirationDate": "2018-01-01T00:00:00-06:00",
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string",
                        "readOnly": true
                    },
                    "Editable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "Token": {
                        "type": "string"
                    },
                    "DateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "CardType": {
                        "type": "string"
                    },
                    "PartialAccountNumber": {
                        "type": "string",
                        "maxLength": 5
                    },
                    "CardholderName": {
                        "type": "string"
                    },
                    "ExpirationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "BuyerProduct": {
                "type": "object",
                "example": {
                    "PriceSchedule": {
                        "ID": "",
                        "Name": "",
                        "ApplyTax": false,
                        "ApplyShipping": false,
                        "MinQuantity": 0,
                        "MaxQuantity": 0,
                        "UseCumulativeQuantity": false,
                        "RestrictedQuantity": false,
                        "PriceBreaks": [{
                            "Quantity": 0,
                            "Price": 0
                        }],
                        "xp": {}
                    },
                    "ID": "",
                    "Name": "",
                    "Description": "",
                    "QuantityMultiplier": 0,
                    "ShipWeight": 0,
                    "ShipHeight": 0,
                    "ShipWidth": 0,
                    "ShipLength": 0,
                    "Active": false,
                    "SpecCount": 0,
                    "xp": {},
                    "VariantCount": 0,
                    "ShipFromAddressID": "",
                    "Inventory": {
                        "Enabled": false,
                        "NotificationPoint": 0,
                        "VariantLevelTracking": false,
                        "OrderCanExceed": false,
                        "QuantityAvailable": 0,
                        "LastUpdated": "2018-01-01T00:00:00-06:00"
                    },
                    "DefaultSupplierID": ""
                },
                "properties": {
                    "PriceSchedule": {
                        "$ref": "#/components/schemas/PriceSchedule"
                    },
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Description": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "QuantityMultiplier": {
                        "type": "integer",
                        "format": "int32",
                        "default": 1,
                        "minimum": 1
                    },
                    "ShipWeight": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipHeight": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipWidth": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipLength": {
                        "type": "number",
                        "format": "float"
                    },
                    "Active": {
                        "type": "boolean"
                    },
                    "SpecCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "xp": {
                        "type": "object"
                    },
                    "VariantCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "ShipFromAddressID": {
                        "type": "string"
                    },
                    "Inventory": {
                        "$ref": "#/components/schemas/Inventory"
                    },
                    "DefaultSupplierID": {
                        "type": "string"
                    }
                }
            },
            "BuyerSpec": {
                "type": "object",
                "example": {
                    "Options": [{
                        "ID": "",
                        "Value": "",
                        "ListOrder": 1,
                        "IsOpenText": false,
                        "PriceMarkupType": "NoMarkup",
                        "PriceMarkup": 0,
                        "xp": {}
                    }],
                    "ID": "",
                    "ListOrder": 1,
                    "Name": "",
                    "DefaultValue": "",
                    "Required": false,
                    "AllowOpenText": false,
                    "DefaultOptionID": "",
                    "DefinesVariant": false,
                    "xp": {}
                },
                "properties": {
                    "Options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecOption"
                        },
                        "readOnly": true
                    },
                    "ID": {
                        "type": "string"
                    },
                    "ListOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "DefaultValue": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "Required": {
                        "type": "boolean"
                    },
                    "AllowOpenText": {
                        "type": "boolean"
                    },
                    "DefaultOptionID": {
                        "type": "string"
                    },
                    "DefinesVariant": {
                        "type": "boolean",
                        "description": "True if each unique combinations of this Spec's Options map to unique Product Variants/SKUs."
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "Catalog": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "Description": "",
                    "Active": false,
                    "CategoryCount": 0,
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Description": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "Active": {
                        "type": "boolean"
                    },
                    "CategoryCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "CatalogAssignment": {
                "type": "object",
                "example": {
                    "CatalogID": "",
                    "BuyerID": "",
                    "ViewAllCategories": false,
                    "ViewAllProducts": false
                },
                "properties": {
                    "CatalogID": {
                        "type": "string"
                    },
                    "BuyerID": {
                        "type": "string"
                    },
                    "ViewAllCategories": {
                        "type": "boolean"
                    },
                    "ViewAllProducts": {
                        "type": "boolean"
                    }
                }
            },
            "Category": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "Description": "",
                    "ListOrder": 1,
                    "Active": false,
                    "ParentID": "",
                    "ChildCount": 0,
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Description": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "ListOrder": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Order that the category appears within its parent or catalog (if root level).",
                        "minimum": 0
                    },
                    "Active": {
                        "type": "boolean",
                        "description": "If false, buyers cannot see this Category or any Categories or Products under it."
                    },
                    "ParentID": {
                        "type": "string",
                        "description": "ID of the parent category."
                    },
                    "ChildCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true,
                        "description": "Number of categories that are *immediate* children of this category."
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "CategoryAssignment": {
                "type": "object",
                "example": {
                    "CategoryID": "",
                    "BuyerID": "",
                    "UserGroupID": "",
                    "Visible": false,
                    "ViewAllProducts": false
                },
                "properties": {
                    "CategoryID": {
                        "type": "string"
                    },
                    "BuyerID": {
                        "type": "string"
                    },
                    "UserGroupID": {
                        "type": "string"
                    },
                    "Visible": {
                        "type": "boolean",
                        "description": "Optional. Set to null to inherit from parent category or catlog level."
                    },
                    "ViewAllProducts": {
                        "type": "boolean",
                        "description": "Optional. Set to null to inherit from parent category or catlog level."
                    }
                }
            },
            "CategoryProductAssignment": {
                "type": "object",
                "example": {
                    "CategoryID": "",
                    "ProductID": "",
                    "ListOrder": 1
                },
                "properties": {
                    "CategoryID": {
                        "type": "string"
                    },
                    "ProductID": {
                        "type": "string"
                    },
                    "ListOrder": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "CostCenter": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "Description": "",
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Description": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "CostCenterAssignment": {
                "type": "object",
                "example": {
                    "CostCenterID": "",
                    "UserGroupID": ""
                },
                "properties": {
                    "CostCenterID": {
                        "type": "string"
                    },
                    "UserGroupID": {
                        "type": "string"
                    }
                }
            },
            "CreditCard": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Token": "",
                    "DateCreated": "2018-01-01T00:00:00-06:00",
                    "CardType": "",
                    "PartialAccountNumber": "",
                    "CardholderName": "",
                    "ExpirationDate": "2018-01-01T00:00:00-06:00",
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Token": {
                        "type": "string"
                    },
                    "DateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "CardType": {
                        "type": "string"
                    },
                    "PartialAccountNumber": {
                        "type": "string",
                        "maxLength": 5
                    },
                    "CardholderName": {
                        "type": "string"
                    },
                    "ExpirationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "CreditCardAssignment": {
                "type": "object",
                "example": {
                    "CreditCardID": "",
                    "UserID": "",
                    "UserGroupID": ""
                },
                "properties": {
                    "CreditCardID": {
                        "type": "string"
                    },
                    "UserID": {
                        "type": "string"
                    },
                    "UserGroupID": {
                        "type": "string"
                    }
                }
            },
            "ImpersonateTokenRequest": {
                "type": "object",
                "example": {
                    "ClientID": "",
                    "Roles": ["DevCenter"]
                },
                "properties": {
                    "ClientID": {
                        "type": "string"
                    },
                    "Roles": {
                        "type": "array",
                        "enum": [
                            "DevCenter",
                            "DevCenterPasswordReset",
                            "DevCenterValidateEmail",
                            "GrantForAnyRole",
                            "ApiClientAdmin",
                            "ApiClientReader",
                            "AddressAdmin",
                            "AddressReader",
                            "AdminAddressAdmin",
                            "AdminAddressReader",
                            "AdminUserAdmin",
                            "AdminUserGroupAdmin",
                            "AdminUserGroupReader",
                            "AdminUserReader",
                            "ApprovalRuleAdmin",
                            "ApprovalRuleReader",
                            "BuyerAdmin",
                            "BuyerImpersonation",
                            "BuyerReader",
                            "BuyerUserAdmin",
                            "BuyerUserReader",
                            "CatalogAdmin",
                            "CatalogReader",
                            "CategoryAdmin",
                            "CategoryReader",
                            "CostCenterAdmin",
                            "CostCenterReader",
                            "CreditCardAdmin",
                            "CreditCardReader",
                            "FullAccess",
                            "IncrementorAdmin",
                            "IncrementorReader",
                            "InventoryAdmin",
                            "MeAddressAdmin",
                            "MeAdmin",
                            "MeCreditCardAdmin",
                            "MessageConfigAssignmentAdmin",
                            "MeXpAdmin",
                            "OrderAdmin",
                            "OrderReader",
                            "OverrideShipping",
                            "OverrideTax",
                            "OverrideUnitPrice",
                            "PasswordReset",
                            "PriceScheduleAdmin",
                            "PriceScheduleReader",
                            "ProductAdmin",
                            "ProductAssignmentAdmin",
                            "ProductFacetAdmin",
                            "ProductFacetReader",
                            "ProductReader",
                            "PromotionAdmin",
                            "PromotionReader",
                            "SetSecurityProfile",
                            "ShipmentAdmin",
                            "ShipmentReader",
                            "Shopper",
                            "SpendingAccountAdmin",
                            "SpendingAccountReader",
                            "SupplierAddressAdmin",
                            "SupplierAddressReader",
                            "SupplierAdmin",
                            "SupplierReader",
                            "SupplierUserAdmin",
                            "SupplierUserGroupAdmin",
                            "SupplierUserGroupReader",
                            "SupplierUserReader",
                            "UnsubmittedOrderReader",
                            "UserGroupAdmin",
                            "UserGroupReader"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ImpersonationConfig": {
                "type": "object",
                "example": {
                    "ID": "",
                    "ImpersonationBuyerID": "",
                    "ImpersonationGroupID": "",
                    "ImpersonationUserID": "",
                    "BuyerID": "",
                    "GroupID": "",
                    "UserID": "",
                    "SecurityProfileID": "",
                    "ClientID": ""
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "ImpersonationBuyerID": {
                        "type": "string"
                    },
                    "ImpersonationGroupID": {
                        "type": "string"
                    },
                    "ImpersonationUserID": {
                        "type": "string"
                    },
                    "BuyerID": {
                        "type": "string"
                    },
                    "GroupID": {
                        "type": "string"
                    },
                    "UserID": {
                        "type": "string"
                    },
                    "SecurityProfileID": {
                        "type": "string"
                    },
                    "ClientID": {
                        "type": "string"
                    }
                }
            },
            "Incrementor": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "LastNumber": 0,
                    "LeftPaddingCount": 0
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "LastNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LeftPaddingCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Inventory": {
                "type": "object",
                "example": {
                    "Enabled": false,
                    "NotificationPoint": 0,
                    "VariantLevelTracking": false,
                    "OrderCanExceed": false,
                    "QuantityAvailable": 0,
                    "LastUpdated": "2018-01-01T00:00:00-06:00"
                },
                "properties": {
                    "Enabled": {
                        "type": "boolean"
                    },
                    "NotificationPoint": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "VariantLevelTracking": {
                        "type": "boolean"
                    },
                    "OrderCanExceed": {
                        "type": "boolean"
                    },
                    "QuantityAvailable": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Automatically decrements on order submit."
                    },
                    "LastUpdated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "LineItem": {
                "type": "object",
                "example": {
                    "ID": "",
                    "ProductID": "",
                    "Quantity": 0,
                    "DateAdded": "2018-01-01T00:00:00-06:00",
                    "QuantityShipped": 0,
                    "UnitPrice": 0,
                    "LineTotal": 0,
                    "CostCenter": "",
                    "DateNeeded": "2018-01-01T00:00:00-06:00",
                    "ShippingAccount": "",
                    "ShippingAddressID": "",
                    "ShipFromAddressID": "",
                    "Product": {
                        "ID": "",
                        "Name": "",
                        "Description": "",
                        "QuantityMultiplier": 0,
                        "ShipWeight": 0,
                        "ShipHeight": 0,
                        "ShipWidth": 0,
                        "ShipLength": 0,
                        "xp": {}
                    },
                    "Variant": {
                        "ID": "",
                        "Name": "",
                        "Description": "",
                        "ShipWeight": 0,
                        "ShipHeight": 0,
                        "ShipWidth": 0,
                        "ShipLength": 0,
                        "xp": {}
                    },
                    "ShippingAddress": {
                        "ID": "",
                        "DateCreated": "2018-01-01T00:00:00-06:00",
                        "CompanyName": "",
                        "FirstName": "",
                        "LastName": "",
                        "Street1": "",
                        "Street2": "",
                        "City": "",
                        "State": "",
                        "Zip": "",
                        "Country": "",
                        "Phone": "",
                        "AddressName": "",
                        "xp": {}
                    },
                    "ShipFromAddress": {
                        "ID": "",
                        "DateCreated": "2018-01-01T00:00:00-06:00",
                        "CompanyName": "",
                        "FirstName": "",
                        "LastName": "",
                        "Street1": "",
                        "Street2": "",
                        "City": "",
                        "State": "",
                        "Zip": "",
                        "Country": "",
                        "Phone": "",
                        "AddressName": "",
                        "xp": {}
                    },
                    "SupplierID": "",
                    "Specs": [{
                        "SpecID": "",
                        "Name": "",
                        "OptionID": "",
                        "Value": ""
                    }],
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "ProductID": {
                        "type": "string"
                    },
                    "Quantity": {
                        "type": "integer",
                        "format": "int32",
                        "default": 1,
                        "minimum": 1
                    },
                    "DateAdded": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "QuantityShipped": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "UnitPrice": {
                        "type": "number",
                        "format": "float"
                    },
                    "LineTotal": {
                        "type": "number",
                        "format": "float",
                        "readOnly": true
                    },
                    "CostCenter": {
                        "type": "string"
                    },
                    "DateNeeded": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ShippingAccount": {
                        "type": "string"
                    },
                    "ShippingAddressID": {
                        "type": "string"
                    },
                    "ShipFromAddressID": {
                        "type": "string"
                    },
                    "Product": {
                        "$ref": "#/components/schemas/LineItemProduct"
                    },
                    "Variant": {
                        "$ref": "#/components/schemas/LineItemVariant"
                    },
                    "ShippingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "ShipFromAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "SupplierID": {
                        "type": "string",
                        "readOnly": true
                    },
                    "Specs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LineItemSpec"
                        }
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "LineItemProduct": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "Description": "",
                    "QuantityMultiplier": 0,
                    "ShipWeight": 0,
                    "ShipHeight": 0,
                    "ShipWidth": 0,
                    "ShipLength": 0,
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "QuantityMultiplier": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ShipWeight": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipHeight": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipWidth": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipLength": {
                        "type": "number",
                        "format": "float"
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "LineItemSpec": {
                "type": "object",
                "example": {
                    "SpecID": "",
                    "Name": "",
                    "OptionID": "",
                    "Value": ""
                },
                "properties": {
                    "SpecID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "OptionID": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string",
                        "maxLength": 2000
                    }
                }
            },
            "LineItemVariant": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "Description": "",
                    "ShipWeight": 0,
                    "ShipHeight": 0,
                    "ShipWidth": 0,
                    "ShipLength": 0,
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "ShipWeight": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipHeight": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipWidth": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipLength": {
                        "type": "number",
                        "format": "float"
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "ListAddress": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Address"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListAddressAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListApiClient": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApiClient"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListApiClientAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApiClientAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListApprovalRule": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApprovalRule"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListBuyer": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Buyer"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListBuyerAddress": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BuyerAddress"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListBuyerCreditCard": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BuyerCreditCard"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListBuyerProduct": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BuyerProduct"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/MetaWithFacets"
                    }
                }
            },
            "ListBuyerSpec": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BuyerSpec"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListCatalog": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Catalog"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListCatalogAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CatalogAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListCategory": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListCategoryAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListCategoryProductAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryProductAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListCostCenter": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CostCenter"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListCostCenterAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CostCenterAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListCreditCard": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreditCard"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListCreditCardAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreditCardAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListFacet": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string"
                    },
                    "XpPath": {
                        "type": "string"
                    },
                    "Values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListFacetValue"
                        }
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "ListFacetValue": {
                "type": "object",
                "properties": {
                    "Value": {
                        "type": "string"
                    },
                    "Count": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ListImpersonationConfig": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImpersonationConfig"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListIncrementor": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Incrementor"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListLineItem": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LineItem"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListMessageCCListenerAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageCCListenerAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListMessageSender": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageSender"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListMessageSenderAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageSenderAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListOrder": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Order"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListOrderApproval": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderApproval"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListOrderPromotion": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderPromotion"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListPayment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Payment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListPriceSchedule": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceSchedule"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListProduct": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListProductAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListProductCatalogAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductCatalogAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListProductFacet": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductFacet"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListPromotion": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Promotion"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListPromotionAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PromotionAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListSecurityProfile": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SecurityProfile"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListSecurityProfileAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SecurityProfileAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListShipment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Shipment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListShipmentItem": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipmentItem"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListSpec": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Spec"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListSpecOption": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecOption"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListSpecProductAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecProductAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListSpendingAccount": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpendingAccount"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListSpendingAccountAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpendingAccountAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListSupplier": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Supplier"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListUser": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListUserGroup": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserGroup"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListUserGroupAssignment": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserGroupAssignment"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ListVariant": {
                "type": "object",
                "properties": {
                    "Items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variant"
                        }
                    },
                    "Meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "MeBuyer": {
                "type": "object",
                "example": {
                    "ID": "",
                    "DefaultCatalogID": ""
                },
                "properties": {
                    "ID": {
                        "type": "string",
                        "readOnly": true
                    },
                    "DefaultCatalogID": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "MessageCCListenerAssignment": {
                "type": "object",
                "example": {
                    "MessageSenderAssignment": {
                        "MessageSenderID": "",
                        "BuyerID": "",
                        "SupplierID": "",
                        "UserGroupID": "",
                        "MessageConfigName": "",
                        "MessageConfigDescription": ""
                    },
                    "MessageConfigName": "",
                    "MessageConfigDescription": "",
                    "MessageType": "OrderDeclined",
                    "BuyerID": "",
                    "SupplierID": "",
                    "UserGroupID": "",
                    "UserID": ""
                },
                "properties": {
                    "MessageSenderAssignment": {
                        "$ref": "#/components/schemas/MessageSenderAssignment"
                    },
                    "MessageConfigName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "MessageConfigDescription": {
                        "type": "string",
                        "readOnly": true
                    },
                    "MessageType": {
                        "enum": [
                            "OrderDeclined",
                            "OrderSubmitted",
                            "ShipmentCreated",
                            "ForgottenPassword",
                            "OrderSubmittedForYourApproval",
                            "OrderSubmittedForApproval",
                            "OrderApproved",
                            "OrderSubmittedForYourApprovalHasBeenApproved",
                            "OrderSubmittedForYourApprovalHasBeenDeclined",
                            "NewUserInvitation"
                        ],
                        "type": "string"
                    },
                    "BuyerID": {
                        "type": "string"
                    },
                    "SupplierID": {
                        "type": "string"
                    },
                    "UserGroupID": {
                        "type": "string"
                    },
                    "UserID": {
                        "type": "string"
                    }
                }
            },
            "MessageSender": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "MessageTypes": ["OrderDeclined"],
                    "Description": ""
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "MessageTypes": {
                        "type": "array",
                        "enum": [
                            "OrderDeclined",
                            "OrderSubmitted",
                            "ShipmentCreated",
                            "ForgottenPassword",
                            "OrderSubmittedForYourApproval",
                            "OrderSubmittedForApproval",
                            "OrderApproved",
                            "OrderSubmittedForYourApprovalHasBeenApproved",
                            "OrderSubmittedForYourApprovalHasBeenDeclined",
                            "NewUserInvitation"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "Description": {
                        "type": "string"
                    }
                }
            },
            "MessageSenderAssignment": {
                "type": "object",
                "example": {
                    "MessageSenderID": "",
                    "BuyerID": "",
                    "SupplierID": "",
                    "UserGroupID": "",
                    "MessageConfigName": "",
                    "MessageConfigDescription": ""
                },
                "properties": {
                    "MessageSenderID": {
                        "type": "string"
                    },
                    "BuyerID": {
                        "type": "string"
                    },
                    "SupplierID": {
                        "type": "string"
                    },
                    "UserGroupID": {
                        "type": "string"
                    },
                    "MessageConfigName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "MessageConfigDescription": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "MeSupplier": {
                "type": "object",
                "example": {
                    "ID": ""
                },
                "properties": {
                    "ID": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Meta": {
                "type": "object",
                "properties": {
                    "Page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "PageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "TotalCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "TotalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ItemRange": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "MetaWithFacets": {
                "type": "object",
                "properties": {
                    "Facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListFacet"
                        }
                    },
                    "Page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "PageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "TotalCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "TotalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ItemRange": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "MeUser": {
                "type": "object",
                "example": {
                    "Buyer": {
                        "ID": "",
                        "DefaultCatalogID": ""
                    },
                    "Supplier": {
                        "ID": ""
                    },
                    "ID": "",
                    "Username": "",
                    "Password": "",
                    "FirstName": "",
                    "LastName": "",
                    "Email": "",
                    "Phone": "",
                    "TermsAccepted": "2018-01-01T00:00:00-06:00",
                    "Active": false,
                    "xp": {},
                    "AvailableRoles": [""]
                },
                "properties": {
                    "Buyer": {
                        "$ref": "#/components/schemas/MeBuyer"
                    },
                    "Supplier": {
                        "$ref": "#/components/schemas/MeSupplier"
                    },
                    "ID": {
                        "type": "string"
                    },
                    "Username": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Password": {
                        "type": "string",
                        "format": "password"
                    },
                    "FirstName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "LastName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Email": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "Phone": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "TermsAccepted": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Active": {
                        "type": "boolean"
                    },
                    "xp": {
                        "type": "object"
                    },
                    "AvailableRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    }
                }
            },
            "Order": {
                "type": "object",
                "example": {
                    "ID": "",
                    "FromUser": {
                        "ID": "",
                        "Username": "",
                        "Password": "",
                        "FirstName": "",
                        "LastName": "",
                        "Email": "",
                        "Phone": "",
                        "TermsAccepted": "2018-01-01T00:00:00-06:00",
                        "Active": false,
                        "xp": {},
                        "AvailableRoles": [""]
                    },
                    "FromCompanyID": "",
                    "FromUserID": "",
                    "BillingAddressID": "",
                    "BillingAddress": {
                        "ID": "",
                        "DateCreated": "2018-01-01T00:00:00-06:00",
                        "CompanyName": "",
                        "FirstName": "",
                        "LastName": "",
                        "Street1": "",
                        "Street2": "",
                        "City": "",
                        "State": "",
                        "Zip": "",
                        "Country": "",
                        "Phone": "",
                        "AddressName": "",
                        "xp": {}
                    },
                    "ShippingAddressID": "",
                    "Comments": "",
                    "LineItemCount": 0,
                    "Status": "Unsubmitted",
                    "DateCreated": "2018-01-01T00:00:00-06:00",
                    "DateSubmitted": "2018-01-01T00:00:00-06:00",
                    "DateApproved": "2018-01-01T00:00:00-06:00",
                    "DateDeclined": "2018-01-01T00:00:00-06:00",
                    "DateCanceled": "2018-01-01T00:00:00-06:00",
                    "DateCompleted": "2018-01-01T00:00:00-06:00",
                    "Subtotal": 0,
                    "ShippingCost": 0,
                    "TaxCost": 0,
                    "PromotionDiscount": 0,
                    "Total": 0,
                    "IsSubmitted": false,
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "FromUser": {
                        "$ref": "#/components/schemas/User"
                    },
                    "FromCompanyID": {
                        "type": "string"
                    },
                    "FromUserID": {
                        "type": "string"
                    },
                    "BillingAddressID": {
                        "type": "string"
                    },
                    "BillingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "ShippingAddressID": {
                        "type": "string",
                        "description": "ID of the Shipping Address for all LineItems on the Order. Null when there are multiple Shipping Addresses involved."
                    },
                    "Comments": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "LineItemCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "Status": {
                        "enum": [
                            "Unsubmitted",
                            "AwaitingApproval",
                            "Declined",
                            "Open",
                            "Completed",
                            "Canceled"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "DateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "DateSubmitted": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "DateApproved": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "DateDeclined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "DateCanceled": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "DateCompleted": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "Subtotal": {
                        "type": "number",
                        "format": "float",
                        "readOnly": true
                    },
                    "ShippingCost": {
                        "type": "number",
                        "format": "float"
                    },
                    "TaxCost": {
                        "type": "number",
                        "format": "float"
                    },
                    "PromotionDiscount": {
                        "type": "number",
                        "format": "float",
                        "readOnly": true
                    },
                    "Total": {
                        "type": "number",
                        "format": "float",
                        "readOnly": true
                    },
                    "IsSubmitted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "True if this Order has been passed from the Buyer to the Seller."
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "OrderApproval": {
                "type": "object",
                "example": {
                    "ApprovalRuleID": "",
                    "ApprovingGroupID": "",
                    "Status": "Pending",
                    "AllowResubmit": false,
                    "DateCreated": "2018-01-01T00:00:00-06:00",
                    "DateCompleted": "2018-01-01T00:00:00-06:00",
                    "Approver": {
                        "ID": "",
                        "Username": "",
                        "Password": "",
                        "FirstName": "",
                        "LastName": "",
                        "Email": "",
                        "Phone": "",
                        "TermsAccepted": "2018-01-01T00:00:00-06:00",
                        "Active": false,
                        "xp": {},
                        "AvailableRoles": [""]
                    },
                    "Comments": ""
                },
                "properties": {
                    "ApprovalRuleID": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ApprovingGroupID": {
                        "type": "string",
                        "readOnly": true
                    },
                    "Status": {
                        "enum": [
                            "Pending",
                            "Approved",
                            "Declined"
                        ],
                        "type": "string",
                        "readOnly": true
                    },
                    "AllowResubmit": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "DateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "DateCompleted": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "Approver": {
                        "$ref": "#/components/schemas/User"
                    },
                    "Comments": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "OrderApprovalInfo": {
                "type": "object",
                "example": {
                    "Comments": "",
                    "AllowResubmit": false
                },
                "properties": {
                    "Comments": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "AllowResubmit": {
                        "type": "boolean"
                    }
                }
            },
            "OrderPromotion": {
                "type": "object",
                "example": {
                    "Amount": 0,
                    "ID": "",
                    "Code": "",
                    "Name": "",
                    "RedemptionLimit": 0,
                    "RedemptionLimitPerUser": 0,
                    "RedemptionCount": 0,
                    "Description": "",
                    "FinePrint": "",
                    "StartDate": "2018-01-01T00:00:00-06:00",
                    "ExpirationDate": "2018-01-01T00:00:00-06:00",
                    "EligibleExpression": "",
                    "ValueExpression": "",
                    "CanCombine": false,
                    "xp": {}
                },
                "properties": {
                    "Amount": {
                        "type": "number",
                        "format": "float",
                        "readOnly": true
                    },
                    "ID": {
                        "type": "string"
                    },
                    "Code": {
                        "type": "string",
                        "description": "Must be unique. Entered by buyer when adding promo to order.",
                        "maxLength": 100
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "RedemptionLimit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "RedemptionLimitPerUser": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "RedemptionCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "Description": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "FinePrint": {
                        "type": "string",
                        "description": "Terms, conditions, and other legal jargon.",
                        "maxLength": 2000
                    },
                    "StartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ExpirationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "EligibleExpression": {
                        "type": "string",
                        "maxLength": 400
                    },
                    "ValueExpression": {
                        "type": "string",
                        "maxLength": 400
                    },
                    "CanCombine": {
                        "type": "boolean"
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "PasswordReset": {
                "type": "object",
                "example": {
                    "ClientID": "",
                    "Username": "",
                    "Password": ""
                },
                "properties": {
                    "ClientID": {
                        "type": "string"
                    },
                    "Username": {
                        "type": "string"
                    },
                    "Password": {
                        "type": "string",
                        "format": "password"
                    }
                }
            },
            "PasswordResetRequest": {
                "type": "object",
                "example": {
                    "ClientID": "",
                    "Email": "",
                    "Username": "",
                    "URL": ""
                },
                "properties": {
                    "ClientID": {
                        "type": "string"
                    },
                    "Email": {
                        "type": "string"
                    },
                    "Username": {
                        "type": "string"
                    },
                    "URL": {
                        "type": "string"
                    }
                }
            },
            "Payment": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Type": "PurchaseOrder",
                    "DateCreated": "2018-01-01T00:00:00-06:00",
                    "CreditCardID": "",
                    "SpendingAccountID": "",
                    "Description": "",
                    "Amount": 0,
                    "Accepted": false,
                    "xp": {},
                    "Transactions": [{
                        "ID": "",
                        "Type": "",
                        "DateExecuted": "2018-01-01T00:00:00-06:00",
                        "Amount": 0,
                        "Succeeded": false,
                        "ResultCode": "",
                        "ResultMessage": "",
                        "xp": {}
                    }]
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Type": {
                        "enum": [
                            "PurchaseOrder",
                            "CreditCard",
                            "SpendingAccount"
                        ],
                        "type": "string"
                    },
                    "DateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "CreditCardID": {
                        "type": "string"
                    },
                    "SpendingAccountID": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "Amount": {
                        "type": "number",
                        "format": "float",
                        "description": "If null, Payment applies to order total (or total of specific Line Items, if set), minus any other Payments where Amount is set.",
                        "minimum": 0.01
                    },
                    "Accepted": {
                        "type": "boolean"
                    },
                    "xp": {
                        "type": "object"
                    },
                    "Transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentTransaction"
                        },
                        "readOnly": true
                    }
                }
            },
            "PaymentTransaction": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Type": "",
                    "DateExecuted": "2018-01-01T00:00:00-06:00",
                    "Amount": 0,
                    "Succeeded": false,
                    "ResultCode": "",
                    "ResultMessage": "",
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Type": {
                        "type": "string"
                    },
                    "DateExecuted": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Usually the same as Payment Amount, but can be different. A charge might have a subsequent partial credit, for example."
                    },
                    "Succeeded": {
                        "type": "boolean"
                    },
                    "ResultCode": {
                        "type": "string"
                    },
                    "ResultMessage": {
                        "type": "string"
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "PriceBreak": {
                "type": "object",
                "example": {
                    "Quantity": 0,
                    "Price": 0
                },
                "properties": {
                    "Quantity": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "Price": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "PriceSchedule": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "ApplyTax": false,
                    "ApplyShipping": false,
                    "MinQuantity": 0,
                    "MaxQuantity": 0,
                    "UseCumulativeQuantity": false,
                    "RestrictedQuantity": false,
                    "PriceBreaks": [{
                        "Quantity": 0,
                        "Price": 0
                    }],
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "ApplyTax": {
                        "type": "boolean"
                    },
                    "ApplyShipping": {
                        "type": "boolean"
                    },
                    "MinQuantity": {
                        "type": "integer",
                        "format": "int32",
                        "default": 1,
                        "minimum": 1
                    },
                    "MaxQuantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "UseCumulativeQuantity": {
                        "type": "boolean"
                    },
                    "RestrictedQuantity": {
                        "type": "boolean"
                    },
                    "PriceBreaks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceBreak"
                        }
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "Product": {
                "type": "object",
                "example": {
                    "DefaultPriceScheduleID": "",
                    "ID": "",
                    "Name": "",
                    "Description": "",
                    "QuantityMultiplier": 0,
                    "ShipWeight": 0,
                    "ShipHeight": 0,
                    "ShipWidth": 0,
                    "ShipLength": 0,
                    "Active": false,
                    "SpecCount": 0,
                    "xp": {},
                    "VariantCount": 0,
                    "ShipFromAddressID": "",
                    "Inventory": {
                        "Enabled": false,
                        "NotificationPoint": 0,
                        "VariantLevelTracking": false,
                        "OrderCanExceed": false,
                        "QuantityAvailable": 0,
                        "LastUpdated": "2018-01-01T00:00:00-06:00"
                    },
                    "DefaultSupplierID": ""
                },
                "properties": {
                    "DefaultPriceScheduleID": {
                        "type": "string"
                    },
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Description": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "QuantityMultiplier": {
                        "type": "integer",
                        "format": "int32",
                        "default": 1,
                        "minimum": 1
                    },
                    "ShipWeight": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipHeight": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipWidth": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipLength": {
                        "type": "number",
                        "format": "float"
                    },
                    "Active": {
                        "type": "boolean"
                    },
                    "SpecCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "xp": {
                        "type": "object"
                    },
                    "VariantCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "ShipFromAddressID": {
                        "type": "string"
                    },
                    "Inventory": {
                        "$ref": "#/components/schemas/Inventory"
                    },
                    "DefaultSupplierID": {
                        "type": "string"
                    }
                }
            },
            "ProductAssignment": {
                "type": "object",
                "example": {
                    "ProductID": "",
                    "BuyerID": "",
                    "UserGroupID": "",
                    "PriceScheduleID": ""
                },
                "properties": {
                    "ProductID": {
                        "type": "string"
                    },
                    "BuyerID": {
                        "type": "string"
                    },
                    "UserGroupID": {
                        "type": "string"
                    },
                    "PriceScheduleID": {
                        "type": "string"
                    }
                }
            },
            "ProductCatalogAssignment": {
                "type": "object",
                "example": {
                    "CatalogID": "",
                    "ProductID": ""
                },
                "properties": {
                    "CatalogID": {
                        "type": "string"
                    },
                    "ProductID": {
                        "type": "string"
                    }
                }
            },
            "ProductFacet": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "XpPath": "",
                    "ListOrder": 1,
                    "MinCount": 0,
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "XpPath": {
                        "type": "string",
                        "description": "Optional. Identifies full path to xp field used for this facet. If not provided, facet value assumed to be stored at product.xp.{facet ID}.",
                        "maxLength": 200
                    },
                    "ListOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "MinCount": {
                        "type": "integer",
                        "format": "int32",
                        "default": 1,
                        "description": "Minimum count required or a facet value to be returned in list metadata. Default is 1. If you want zero-count values returned, set this to 0."
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "Promotion": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Code": "",
                    "Name": "",
                    "RedemptionLimit": 0,
                    "RedemptionLimitPerUser": 0,
                    "RedemptionCount": 0,
                    "Description": "",
                    "FinePrint": "",
                    "StartDate": "2018-01-01T00:00:00-06:00",
                    "ExpirationDate": "2018-01-01T00:00:00-06:00",
                    "EligibleExpression": "",
                    "ValueExpression": "",
                    "CanCombine": false,
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Code": {
                        "type": "string",
                        "description": "Must be unique. Entered by buyer when adding promo to order.",
                        "maxLength": 100
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "RedemptionLimit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "RedemptionLimitPerUser": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "RedemptionCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "Description": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "FinePrint": {
                        "type": "string",
                        "description": "Terms, conditions, and other legal jargon.",
                        "maxLength": 2000
                    },
                    "StartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ExpirationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "EligibleExpression": {
                        "type": "string",
                        "maxLength": 400
                    },
                    "ValueExpression": {
                        "type": "string",
                        "maxLength": 400
                    },
                    "CanCombine": {
                        "type": "boolean"
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "PromotionAssignment": {
                "type": "object",
                "example": {
                    "PromotionID": "",
                    "BuyerID": "",
                    "UserGroupID": ""
                },
                "properties": {
                    "PromotionID": {
                        "type": "string"
                    },
                    "BuyerID": {
                        "type": "string"
                    },
                    "UserGroupID": {
                        "type": "string"
                    }
                }
            },
            "SecurityProfile": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "Roles": ["DevCenter"]
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Roles": {
                        "type": "array",
                        "enum": [
                            "DevCenter",
                            "DevCenterPasswordReset",
                            "DevCenterValidateEmail",
                            "GrantForAnyRole",
                            "ApiClientAdmin",
                            "ApiClientReader",
                            "AddressAdmin",
                            "AddressReader",
                            "AdminAddressAdmin",
                            "AdminAddressReader",
                            "AdminUserAdmin",
                            "AdminUserGroupAdmin",
                            "AdminUserGroupReader",
                            "AdminUserReader",
                            "ApprovalRuleAdmin",
                            "ApprovalRuleReader",
                            "BuyerAdmin",
                            "BuyerImpersonation",
                            "BuyerReader",
                            "BuyerUserAdmin",
                            "BuyerUserReader",
                            "CatalogAdmin",
                            "CatalogReader",
                            "CategoryAdmin",
                            "CategoryReader",
                            "CostCenterAdmin",
                            "CostCenterReader",
                            "CreditCardAdmin",
                            "CreditCardReader",
                            "FullAccess",
                            "IncrementorAdmin",
                            "IncrementorReader",
                            "InventoryAdmin",
                            "MeAddressAdmin",
                            "MeAdmin",
                            "MeCreditCardAdmin",
                            "MessageConfigAssignmentAdmin",
                            "MeXpAdmin",
                            "OrderAdmin",
                            "OrderReader",
                            "OverrideShipping",
                            "OverrideTax",
                            "OverrideUnitPrice",
                            "PasswordReset",
                            "PriceScheduleAdmin",
                            "PriceScheduleReader",
                            "ProductAdmin",
                            "ProductAssignmentAdmin",
                            "ProductFacetAdmin",
                            "ProductFacetReader",
                            "ProductReader",
                            "PromotionAdmin",
                            "PromotionReader",
                            "SetSecurityProfile",
                            "ShipmentAdmin",
                            "ShipmentReader",
                            "Shopper",
                            "SpendingAccountAdmin",
                            "SpendingAccountReader",
                            "SupplierAddressAdmin",
                            "SupplierAddressReader",
                            "SupplierAdmin",
                            "SupplierReader",
                            "SupplierUserAdmin",
                            "SupplierUserGroupAdmin",
                            "SupplierUserGroupReader",
                            "SupplierUserReader",
                            "UnsubmittedOrderReader",
                            "UserGroupAdmin",
                            "UserGroupReader"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SecurityProfileAssignment": {
                "type": "object",
                "example": {
                    "SecurityProfileID": "",
                    "BuyerID": "",
                    "SupplierID": "",
                    "UserID": "",
                    "UserGroupID": ""
                },
                "properties": {
                    "SecurityProfileID": {
                        "type": "string"
                    },
                    "BuyerID": {
                        "type": "string"
                    },
                    "SupplierID": {
                        "type": "string"
                    },
                    "UserID": {
                        "type": "string"
                    },
                    "UserGroupID": {
                        "type": "string"
                    }
                }
            },
            "Shipment": {
                "type": "object",
                "example": {
                    "ID": "",
                    "BuyerID": "",
                    "Shipper": "",
                    "DateShipped": "2018-01-01T00:00:00-06:00",
                    "DateDelivered": "2018-01-01T00:00:00-06:00",
                    "TrackingNumber": "",
                    "Cost": 0,
                    "xp": {},
                    "Account": "",
                    "FromAddressID": "",
                    "ToAddressID": "",
                    "FromAddress": {
                        "ID": "",
                        "DateCreated": "2018-01-01T00:00:00-06:00",
                        "CompanyName": "",
                        "FirstName": "",
                        "LastName": "",
                        "Street1": "",
                        "Street2": "",
                        "City": "",
                        "State": "",
                        "Zip": "",
                        "Country": "",
                        "Phone": "",
                        "AddressName": "",
                        "xp": {}
                    },
                    "ToAddress": {
                        "ID": "",
                        "DateCreated": "2018-01-01T00:00:00-06:00",
                        "CompanyName": "",
                        "FirstName": "",
                        "LastName": "",
                        "Street1": "",
                        "Street2": "",
                        "City": "",
                        "State": "",
                        "Zip": "",
                        "Country": "",
                        "Phone": "",
                        "AddressName": "",
                        "xp": {}
                    }
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "BuyerID": {
                        "type": "string"
                    },
                    "Shipper": {
                        "type": "string"
                    },
                    "DateShipped": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "DateDelivered": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "TrackingNumber": {
                        "type": "string",
                        "maxLength": 3000
                    },
                    "Cost": {
                        "type": "number",
                        "format": "float"
                    },
                    "xp": {
                        "type": "object"
                    },
                    "Account": {
                        "type": "string"
                    },
                    "FromAddressID": {
                        "type": "string"
                    },
                    "ToAddressID": {
                        "type": "string"
                    },
                    "FromAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "ToAddress": {
                        "$ref": "#/components/schemas/Address"
                    }
                }
            },
            "ShipmentItem": {
                "type": "object",
                "example": {
                    "OrderID": "",
                    "LineItemID": "",
                    "QuantityShipped": 0,
                    "UnitPrice": 0,
                    "CostCenter": "",
                    "DateNeeded": "2018-01-01T00:00:00-06:00",
                    "Product": {
                        "ID": "",
                        "Name": "",
                        "Description": "",
                        "QuantityMultiplier": 0,
                        "ShipWeight": 0,
                        "ShipHeight": 0,
                        "ShipWidth": 0,
                        "ShipLength": 0,
                        "xp": {}
                    },
                    "Variant": {
                        "ID": "",
                        "Name": "",
                        "Description": "",
                        "ShipWeight": 0,
                        "ShipHeight": 0,
                        "ShipWidth": 0,
                        "ShipLength": 0,
                        "xp": {}
                    },
                    "Specs": [{
                        "SpecID": "",
                        "Name": "",
                        "OptionID": "",
                        "Value": ""
                    }],
                    "xp": {}
                },
                "properties": {
                    "OrderID": {
                        "type": "string"
                    },
                    "LineItemID": {
                        "type": "string"
                    },
                    "QuantityShipped": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "UnitPrice": {
                        "type": "number",
                        "format": "float",
                        "readOnly": true
                    },
                    "CostCenter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "DateNeeded": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "Product": {
                        "$ref": "#/components/schemas/LineItemProduct"
                    },
                    "Variant": {
                        "$ref": "#/components/schemas/LineItemVariant"
                    },
                    "Specs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LineItemSpec"
                        },
                        "readOnly": true
                    },
                    "xp": {
                        "type": "object",
                        "readOnly": true
                    }
                }
            },
            "Spec": {
                "type": "object",
                "example": {
                    "OptionCount": 0,
                    "ID": "",
                    "ListOrder": 1,
                    "Name": "",
                    "DefaultValue": "",
                    "Required": false,
                    "AllowOpenText": false,
                    "DefaultOptionID": "",
                    "DefinesVariant": false,
                    "xp": {}
                },
                "properties": {
                    "OptionCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "ID": {
                        "type": "string"
                    },
                    "ListOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "DefaultValue": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "Required": {
                        "type": "boolean"
                    },
                    "AllowOpenText": {
                        "type": "boolean"
                    },
                    "DefaultOptionID": {
                        "type": "string"
                    },
                    "DefinesVariant": {
                        "type": "boolean",
                        "description": "True if each unique combinations of this Spec's Options map to unique Product Variants/SKUs."
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "SpecOption": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Value": "",
                    "ListOrder": 1,
                    "IsOpenText": false,
                    "PriceMarkupType": "NoMarkup",
                    "PriceMarkup": 0,
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "ListOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IsOpenText": {
                        "type": "boolean"
                    },
                    "PriceMarkupType": {
                        "enum": [
                            "NoMarkup",
                            "AmountPerQuantity",
                            "AmountTotal",
                            "Percentage"
                        ],
                        "type": "string"
                    },
                    "PriceMarkup": {
                        "type": "number",
                        "format": "float"
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "SpecProductAssignment": {
                "type": "object",
                "example": {
                    "SpecID": "",
                    "ProductID": "",
                    "DefaultValue": "",
                    "DefaultOptionID": ""
                },
                "properties": {
                    "SpecID": {
                        "type": "string"
                    },
                    "ProductID": {
                        "type": "string"
                    },
                    "DefaultValue": {
                        "type": "string",
                        "description": "Optional. When defined, overrides the DefaultValue set on the Spec for just this Product.",
                        "maxLength": 2000
                    },
                    "DefaultOptionID": {
                        "type": "string",
                        "description": "Optional. When defined, overrides the DefaultOptionID set on the Spec for just this Product."
                    }
                }
            },
            "SpendingAccount": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "Balance": 0,
                    "AllowAsPaymentMethod": false,
                    "RedemptionCode": "",
                    "StartDate": "2018-01-01T00:00:00-06:00",
                    "EndDate": "2018-01-01T00:00:00-06:00",
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Balance": {
                        "type": "number",
                        "format": "float"
                    },
                    "AllowAsPaymentMethod": {
                        "type": "boolean"
                    },
                    "RedemptionCode": {
                        "type": "string",
                        "description": "If specified, matching code must be provided on redemption in order for the transaction to be successful. Most commonly used to implement Gift Cards."
                    },
                    "StartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "EndDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "SpendingAccountAssignment": {
                "type": "object",
                "example": {
                    "SpendingAccountID": "",
                    "UserID": "",
                    "UserGroupID": "",
                    "AllowExceed": false
                },
                "properties": {
                    "SpendingAccountID": {
                        "type": "string"
                    },
                    "UserID": {
                        "type": "string"
                    },
                    "UserGroupID": {
                        "type": "string"
                    },
                    "AllowExceed": {
                        "type": "boolean"
                    }
                }
            },
            "Supplier": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "Active": false,
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Active": {
                        "type": "boolean"
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "TokenPasswordReset": {
                "type": "object",
                "example": {
                    "NewPassword": ""
                },
                "properties": {
                    "NewPassword": {
                        "type": "string",
                        "format": "password"
                    }
                }
            },
            "User": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Username": "",
                    "Password": "",
                    "FirstName": "",
                    "LastName": "",
                    "Email": "",
                    "Phone": "",
                    "TermsAccepted": "2018-01-01T00:00:00-06:00",
                    "Active": false,
                    "xp": {},
                    "AvailableRoles": [""]
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Username": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Password": {
                        "type": "string",
                        "format": "password"
                    },
                    "FirstName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "LastName": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Email": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "Phone": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "TermsAccepted": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Active": {
                        "type": "boolean"
                    },
                    "xp": {
                        "type": "object"
                    },
                    "AvailableRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    }
                }
            },
            "UserGroup": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "Description": "",
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "Description": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "UserGroupAssignment": {
                "type": "object",
                "example": {
                    "UserGroupID": "",
                    "UserID": ""
                },
                "properties": {
                    "UserGroupID": {
                        "type": "string"
                    },
                    "UserID": {
                        "type": "string"
                    }
                }
            },
            "Variant": {
                "type": "object",
                "example": {
                    "ID": "",
                    "Name": "",
                    "Description": "",
                    "Active": false,
                    "ShipWeight": 0,
                    "ShipHeight": 0,
                    "ShipWidth": 0,
                    "ShipLength": 0,
                    "Inventory": {
                        "QuantityAvailable": 0,
                        "LastUpdated": "2018-01-01T00:00:00-06:00"
                    },
                    "xp": {}
                },
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "Active": {
                        "type": "boolean"
                    },
                    "ShipWeight": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipHeight": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipWidth": {
                        "type": "number",
                        "format": "float"
                    },
                    "ShipLength": {
                        "type": "number",
                        "format": "float"
                    },
                    "Inventory": {
                        "$ref": "#/components/schemas/VariantInventory"
                    },
                    "xp": {
                        "type": "object"
                    }
                }
            },
            "VariantInventory": {
                "type": "object",
                "example": {
                    "QuantityAvailable": 0,
                    "LastUpdated": "2018-01-01T00:00:00-06:00"
                },
                "properties": {
                    "QuantityAvailable": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastUpdated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "Authentication": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "paths": {
        "/addresses": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAddress"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Admin Address"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of admin addresses.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminAddressAdmin",
                        "AdminAddressReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Admin Address"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new admin address.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminAddressAdmin"
                    ]
                }]
            }
        },
        "/addresses/{addressID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Admin Address"
                ],
                "parameters": [{
                    "name": "addressID",
                    "in": "path",
                    "description": "ID of the address.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single admin address.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminAddressAdmin",
                        "AdminAddressReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Admin Address"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "addressID",
                    "in": "path",
                    "description": "ID of the address.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update an admin address.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminAddressAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Admin Address"
                ],
                "parameters": [{
                    "name": "addressID",
                    "in": "path",
                    "description": "ID of the address.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete an admin address.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminAddressAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Admin Address"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "addressID",
                    "in": "path",
                    "description": "ID of the address.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update an admin address.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminAddressAdmin"
                    ]
                }]
            }
        },
        "/adminusers": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUser"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Admin User"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of admin users.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserAdmin",
                        "AdminUserReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Admin User"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new admin user.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserAdmin"
                    ]
                }]
            }
        },
        "/adminusers/{userID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Admin User"
                ],
                "parameters": [{
                    "name": "userID",
                    "in": "path",
                    "description": "ID of the user.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single admin user.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserAdmin",
                        "AdminUserReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Admin User"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "userID",
                    "in": "path",
                    "description": "ID of the user.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update an admin user.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Admin User"
                ],
                "parameters": [{
                    "name": "userID",
                    "in": "path",
                    "description": "ID of the user.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete an admin user.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Admin User"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "userID",
                    "in": "path",
                    "description": "ID of the user.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update an admin user.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserAdmin"
                    ]
                }]
            }
        },
        "/apiclients": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListApiClient"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Api Client"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of api clients.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApiClientAdmin",
                        "ApiClientReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiClient"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Api Client"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiClient"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new api client.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApiClientAdmin"
                    ]
                }]
            }
        },
        "/apiclients/{apiClientID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiClient"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Api Client"
                ],
                "parameters": [{
                    "name": "apiClientID",
                    "in": "path",
                    "description": "ID of the api client.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single api client.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApiClientAdmin",
                        "ApiClientReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiClient"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Api Client"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiClient"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "apiClientID",
                    "in": "path",
                    "description": "ID of the api client.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update an api client.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApiClientAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Api Client"
                ],
                "parameters": [{
                    "name": "apiClientID",
                    "in": "path",
                    "description": "ID of the api client.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete an api client.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApiClientAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiClient"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Api Client"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiClient"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "apiClientID",
                    "in": "path",
                    "description": "ID of the api client.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update an api client.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApiClientAdmin"
                    ]
                }]
            }
        },
        "/apiclients/assignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListApiClientAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListAssignments",
                "tags": [
                    "Api Client"
                ],
                "parameters": [{
                        "name": "apiClientID",
                        "in": "query",
                        "description": "ID of the api client.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "buyerID",
                        "in": "query",
                        "description": "ID of the buyer.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplierID",
                        "in": "query",
                        "description": "ID of the supplier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of api client assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApiClientAdmin",
                        "ApiClientReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveAssignment",
                "tags": [
                    "Api Client"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiClientAssignment"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create or update an api client assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApiClientAdmin"
                    ]
                }]
            }
        },
        "/buyers": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListBuyer"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Buyer"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of buyers.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "BuyerAdmin",
                        "BuyerReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Buyer"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Buyer"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Buyer"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new buyer.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "BuyerAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Buyer"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Buyer"
                ],
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single buyer.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "BuyerAdmin",
                        "BuyerReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Buyer"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Buyer"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Buyer"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a buyer.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "BuyerAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Buyer"
                ],
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete a buyer.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "BuyerAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Buyer"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Buyer"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Buyer"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update a buyer.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "BuyerAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/addresses": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAddress"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Address"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of addresses.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AddressAdmin",
                        "AddressReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Address"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create a new address.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AddressAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/addresses/{addressID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Address"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addressID",
                        "in": "path",
                        "description": "ID of the address.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single address.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AddressAdmin",
                        "AddressReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Address"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addressID",
                        "in": "path",
                        "description": "ID of the address.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update an address.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AddressAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Address"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addressID",
                        "in": "path",
                        "description": "ID of the address.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete an address.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AddressAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Address"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addressID",
                        "in": "path",
                        "description": "ID of the address.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update an address.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AddressAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/addresses/{addressID}/assignments": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteAssignment",
                "tags": [
                    "Address"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addressID",
                        "in": "path",
                        "description": "ID of the address.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete an address assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AddressAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/addresses/assignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAddressAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListAssignments",
                "tags": [
                    "Address"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addressID",
                        "in": "query",
                        "description": "ID of the address.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Level of the address assignment. Possible values: User, Group, Company.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isShipping",
                        "in": "query",
                        "description": "Is shipping of the address assignment.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "isBilling",
                        "in": "query",
                        "description": "Is billing of the address assignment.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of address assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AddressAdmin",
                        "AddressReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveAssignment",
                "tags": [
                    "Address"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressAssignment"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update an address assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AddressAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/ApiClients/Assignments/{apiClientID}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteBuyerAssignment",
                "tags": [
                    "Api Client"
                ],
                "parameters": [{
                        "name": "apiClientID",
                        "in": "path",
                        "description": "ID of the api client.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete an api client buyer assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApiClientAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/approvalrules": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListApprovalRule"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Approval Rule"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of approval rules.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApprovalRuleAdmin",
                        "ApprovalRuleReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApprovalRule"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Approval Rule"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApprovalRule"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create a new approval rule.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApprovalRuleAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/approvalrules/{approvalRuleID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApprovalRule"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Approval Rule"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "approvalRuleID",
                        "in": "path",
                        "description": "ID of the approval rule.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single approval rule.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApprovalRuleAdmin",
                        "ApprovalRuleReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApprovalRule"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Approval Rule"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApprovalRule"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "approvalRuleID",
                        "in": "path",
                        "description": "ID of the approval rule.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update an approval rule.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApprovalRuleAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Approval Rule"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "approvalRuleID",
                        "in": "path",
                        "description": "ID of the approval rule.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete an approval rule.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApprovalRuleAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApprovalRule"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Approval Rule"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApprovalRule"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "approvalRuleID",
                        "in": "path",
                        "description": "ID of the approval rule.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update an approval rule.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApprovalRuleAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/costcenters": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCostCenter"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Cost Center"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of cost centers.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CostCenterAdmin",
                        "CostCenterReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenter"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Cost Center"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CostCenter"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create a new cost center.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CostCenterAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/costcenters/{costCenterID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenter"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Cost Center"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "costCenterID",
                        "in": "path",
                        "description": "ID of the cost center.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single cost center.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CostCenterAdmin",
                        "CostCenterReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenter"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Cost Center"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CostCenter"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "costCenterID",
                        "in": "path",
                        "description": "ID of the cost center.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update a cost center.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CostCenterAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Cost Center"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "costCenterID",
                        "in": "path",
                        "description": "ID of the cost center.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a cost center.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CostCenterAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostCenter"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Cost Center"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CostCenter"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "costCenterID",
                        "in": "path",
                        "description": "ID of the cost center.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update a cost center.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CostCenterAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/costcenters/{costCenterID}/assignments": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteAssignment",
                "tags": [
                    "Cost Center"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "costCenterID",
                        "in": "path",
                        "description": "ID of the cost center.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a cost center assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CostCenterAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/costcenters/assignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCostCenterAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListAssignments",
                "tags": [
                    "Cost Center"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "costCenterID",
                        "in": "query",
                        "description": "ID of the cost center.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Level of the cost center assignment. Possible values: User, Group, Company.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of cost center assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CostCenterAdmin",
                        "CostCenterReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveAssignment",
                "tags": [
                    "Cost Center"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CostCenterAssignment"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a cost center assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CostCenterAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/creditcards": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCreditCard"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Credit Card"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of credit cards.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CreditCardAdmin",
                        "CreditCardReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditCard"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Credit Card"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreditCard"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create a new credit card.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CreditCardAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/creditcards/{creditCardID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditCard"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Credit Card"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "creditCardID",
                        "in": "path",
                        "description": "ID of the credit card.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single credit card.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CreditCardAdmin",
                        "CreditCardReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditCard"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Credit Card"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreditCard"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "creditCardID",
                        "in": "path",
                        "description": "ID of the credit card.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update a credit card.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CreditCardAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Credit Card"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "creditCardID",
                        "in": "path",
                        "description": "ID of the credit card.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a credit card.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CreditCardAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditCard"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Credit Card"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreditCard"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "creditCardID",
                        "in": "path",
                        "description": "ID of the credit card.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update a credit card.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CreditCardAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/creditcards/{creditCardID}/assignments": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteAssignment",
                "tags": [
                    "Credit Card"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "creditCardID",
                        "in": "path",
                        "description": "ID of the credit card.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a credit card assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CreditCardAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/creditcards/assignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCreditCardAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListAssignments",
                "tags": [
                    "Credit Card"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "creditCardID",
                        "in": "query",
                        "description": "ID of the credit card.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Level of the credit card assignment. Possible values: User, Group, Company.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of credit card assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CreditCardAdmin",
                        "CreditCardReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveAssignment",
                "tags": [
                    "Credit Card"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreditCardAssignment"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a credit card assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CreditCardAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/spendingaccounts": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSpendingAccount"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Spending Account"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of spending accounts.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SpendingAccountAdmin",
                        "SpendingAccountReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpendingAccount"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Spending Account"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpendingAccount"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create a new spending account.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SpendingAccountAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/spendingaccounts/{spendingAccountID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpendingAccount"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Spending Account"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "spendingAccountID",
                        "in": "path",
                        "description": "ID of the spending account.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single spending account.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SpendingAccountAdmin",
                        "SpendingAccountReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpendingAccount"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Spending Account"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpendingAccount"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "spendingAccountID",
                        "in": "path",
                        "description": "ID of the spending account.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update a spending account.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SpendingAccountAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Spending Account"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "spendingAccountID",
                        "in": "path",
                        "description": "ID of the spending account.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a spending account.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SpendingAccountAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpendingAccount"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Spending Account"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpendingAccount"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "spendingAccountID",
                        "in": "path",
                        "description": "ID of the spending account.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update a spending account.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SpendingAccountAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/spendingaccounts/{spendingAccountID}/assignments": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteAssignment",
                "tags": [
                    "Spending Account"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "spendingAccountID",
                        "in": "path",
                        "description": "ID of the spending account.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a spending account assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SpendingAccountAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/spendingaccounts/assignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSpendingAccountAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListAssignments",
                "tags": [
                    "Spending Account"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "spendingAccountID",
                        "in": "query",
                        "description": "ID of the spending account.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Level of the spending account assignment. Possible values: User, Group, Company.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of spending account assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SpendingAccountAdmin",
                        "SpendingAccountReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveAssignment",
                "tags": [
                    "Spending Account"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpendingAccountAssignment"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a spending account assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SpendingAccountAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/usergroups": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "User Group"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of user groups.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "UserGroupAdmin",
                        "UserGroupReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "User Group"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create a new user group.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "UserGroupAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/usergroups/{userGroupID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "User Group"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "path",
                        "description": "ID of the user group.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single user group.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "UserGroupAdmin",
                        "UserGroupReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "User Group"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "path",
                        "description": "ID of the user group.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update a user group.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "UserGroupAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "User Group"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "path",
                        "description": "ID of the user group.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a user group.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "UserGroupAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "User Group"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "path",
                        "description": "ID of the user group.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update a user group.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "UserGroupAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/usergroups/{userGroupID}/assignments/{userID}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteUserAssignment",
                "tags": [
                    "User Group"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "path",
                        "description": "ID of the user group.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a user group user assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "UserGroupAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/usergroups/assignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUserGroupAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListUserAssignments",
                "tags": [
                    "User Group"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of user group user assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "UserGroupAdmin",
                        "UserGroupReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveUserAssignment",
                "tags": [
                    "User Group"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroupAssignment"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a user group user assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "UserGroupAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/users": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUser"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "User"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of users.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "BuyerUserAdmin",
                        "BuyerUserReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "buyerID",
                    "in": "path",
                    "description": "ID of the buyer.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create a new user.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "BuyerUserAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/users/{userID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "User"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single user.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "BuyerUserAdmin",
                        "BuyerUserReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update a user.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "BuyerUserAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "User"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a user.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "BuyerUserAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update a user.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "BuyerUserAdmin"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/users/{userID}/accesstoken": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessToken"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetAccessToken",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImpersonateTokenRequest"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single user access token.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "BuyerImpersonation"
                    ]
                }]
            }
        },
        "/buyers/{buyerID}/users/{userID}/moveto/{newBuyerID}": {
            "post": {
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "operationId": "Move",
                "tags": [
                    "User"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "newBuyerID",
                        "in": "path",
                        "description": "ID of the new buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orders",
                        "in": "query",
                        "description": "Orders of the user. Possible values: None, Unsubmitted, All.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "None",
                                "Unsubmitted",
                                "All"
                            ]
                        }
                    }
                ],
                "summary": "Move a user to a different buyer",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "BuyerUserAdmin"
                    ]
                }]
            }
        },
        "/catalogs": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCatalog"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Catalog"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of catalogs.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CatalogAdmin",
                        "CatalogReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Catalog"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Catalog"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Catalog"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new catalog.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CatalogAdmin"
                    ]
                }]
            }
        },
        "/catalogs/{catalogID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Catalog"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Catalog"
                ],
                "parameters": [{
                    "name": "catalogID",
                    "in": "path",
                    "description": "ID of the catalog.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single catalog.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CatalogAdmin",
                        "CatalogReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Catalog"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Catalog"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Catalog"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "catalogID",
                    "in": "path",
                    "description": "ID of the catalog.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a catalog.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CatalogAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Catalog"
                ],
                "parameters": [{
                    "name": "catalogID",
                    "in": "path",
                    "description": "ID of the catalog.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete a catalog.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CatalogAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Catalog"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Catalog"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Catalog"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "catalogID",
                    "in": "path",
                    "description": "ID of the catalog.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update a catalog.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CatalogAdmin"
                    ]
                }]
            }
        },
        "/catalogs/{catalogID}/assignments": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteAssignment",
                "tags": [
                    "Catalog"
                ],
                "parameters": [{
                        "name": "catalogID",
                        "in": "path",
                        "description": "ID of the catalog.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "buyerID",
                        "in": "query",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a catalog assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CatalogAdmin"
                    ]
                }]
            }
        },
        "/catalogs/{catalogID}/categories": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCategory"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Category"
                ],
                "parameters": [{
                        "name": "catalogID",
                        "in": "path",
                        "description": "ID of the catalog.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "depth",
                        "in": "query",
                        "description": "Depth of the category.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of categories.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CategoryAdmin",
                        "CategoryReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Category"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "catalogID",
                    "in": "path",
                    "description": "ID of the catalog.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create a new category.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CategoryAdmin"
                    ]
                }]
            }
        },
        "/catalogs/{catalogID}/categories/{categoryID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Category"
                ],
                "parameters": [{
                        "name": "catalogID",
                        "in": "path",
                        "description": "ID of the catalog.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryID",
                        "in": "path",
                        "description": "ID of the category.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single category.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CategoryAdmin",
                        "CategoryReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Category"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "catalogID",
                        "in": "path",
                        "description": "ID of the catalog.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryID",
                        "in": "path",
                        "description": "ID of the category.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update a category.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CategoryAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Deleting a parent category will also delete all of that category's children."
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Category"
                ],
                "parameters": [{
                        "name": "catalogID",
                        "in": "path",
                        "description": "ID of the catalog.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryID",
                        "in": "path",
                        "description": "ID of the category.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a category.",
                "description": "Deleting a parent category will also delete all of that category's children.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CategoryAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Category"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "catalogID",
                        "in": "path",
                        "description": "ID of the catalog.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryID",
                        "in": "path",
                        "description": "ID of the category.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update a category.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CategoryAdmin"
                    ]
                }]
            }
        },
        "/catalogs/{catalogID}/categories/{categoryID}/assignments": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteAssignment",
                "tags": [
                    "Category"
                ],
                "parameters": [{
                        "name": "catalogID",
                        "in": "path",
                        "description": "ID of the catalog.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryID",
                        "in": "path",
                        "description": "ID of the category.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "buyerID",
                        "in": "query",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a category assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CategoryAdmin"
                    ]
                }]
            }
        },
        "/catalogs/{catalogID}/categories/{categoryID}/productassignments/{productID}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteProductAssignment",
                "tags": [
                    "Category"
                ],
                "parameters": [{
                        "name": "catalogID",
                        "in": "path",
                        "description": "ID of the catalog.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryID",
                        "in": "path",
                        "description": "ID of the category.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a category product assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CategoryAdmin"
                    ]
                }]
            }
        },
        "/catalogs/{catalogID}/categories/assignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCategoryAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListAssignments",
                "tags": [
                    "Category"
                ],
                "parameters": [{
                        "name": "catalogID",
                        "in": "path",
                        "description": "ID of the catalog.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryID",
                        "in": "query",
                        "description": "ID of the category.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "buyerID",
                        "in": "query",
                        "description": "ID of the buyer.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Level of the category assignment. Possible values: User, Group, Company.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of category assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CategoryAdmin",
                        "CategoryReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveAssignment",
                "tags": [
                    "Category"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryAssignment"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "catalogID",
                    "in": "path",
                    "description": "ID of the catalog.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a category assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CategoryAdmin"
                    ]
                }]
            }
        },
        "/catalogs/{catalogID}/categories/productassignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCategoryProductAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListProductAssignments",
                "tags": [
                    "Category"
                ],
                "parameters": [{
                        "name": "catalogID",
                        "in": "path",
                        "description": "ID of the catalog.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryID",
                        "in": "query",
                        "description": "ID of the category.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productID",
                        "in": "query",
                        "description": "ID of the product.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of category product assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CategoryAdmin",
                        "CategoryReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveProductAssignment",
                "tags": [
                    "Category"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryProductAssignment"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "catalogID",
                    "in": "path",
                    "description": "ID of the catalog.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a category product assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CategoryAdmin"
                    ]
                }]
            }
        },
        "/catalogs/{catalogID}/productassignments/{productID}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteProductAssignment",
                "tags": [
                    "Catalog"
                ],
                "parameters": [{
                        "name": "catalogID",
                        "in": "path",
                        "description": "ID of the catalog.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a catalog product assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CatalogAdmin"
                    ]
                }]
            }
        },
        "/catalogs/assignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCatalogAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListAssignments",
                "tags": [
                    "Catalog"
                ],
                "parameters": [{
                        "name": "catalogID",
                        "in": "query",
                        "description": "ID of the catalog.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "buyerID",
                        "in": "query",
                        "description": "ID of the buyer.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of catalog assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CatalogAdmin",
                        "CatalogReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveAssignment",
                "tags": [
                    "Catalog"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CatalogAssignment"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create or update a catalog assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CatalogAdmin"
                    ]
                }]
            }
        },
        "/catalogs/productassignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListProductCatalogAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListProductAssignments",
                "tags": [
                    "Catalog"
                ],
                "parameters": [{
                        "name": "catalogID",
                        "in": "query",
                        "description": "ID of the catalog.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productID",
                        "in": "query",
                        "description": "ID of the product.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of catalog product assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CatalogAdmin",
                        "CatalogReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveProductAssignment",
                "tags": [
                    "Catalog"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCatalogAssignment"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create or update a catalog product assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "CatalogAdmin"
                    ]
                }]
            }
        },
        "/impersonationconfig": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListImpersonationConfig"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Impersonation Config"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of impersonation configs.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SetSecurityProfile"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImpersonationConfig"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Impersonation Config"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImpersonationConfig"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new impersonation config.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SetSecurityProfile"
                    ]
                }]
            }
        },
        "/impersonationconfig/{impersonationConfigID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImpersonationConfig"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Impersonation Config"
                ],
                "parameters": [{
                    "name": "impersonationConfigID",
                    "in": "path",
                    "description": "ID of the impersonation config.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single impersonation config.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SetSecurityProfile"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImpersonationConfig"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Impersonation Config"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImpersonationConfig"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "impersonationConfigID",
                    "in": "path",
                    "description": "ID of the impersonation config.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update an impersonation config.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SetSecurityProfile"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Impersonation Config"
                ],
                "parameters": [{
                    "name": "impersonationConfigID",
                    "in": "path",
                    "description": "ID of the impersonation config.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete an impersonation config.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SetSecurityProfile"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImpersonationConfig"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Impersonation Config"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImpersonationConfig"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "impersonationConfigID",
                    "in": "path",
                    "description": "ID of the impersonation config.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update an impersonation config.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SetSecurityProfile"
                    ]
                }]
            }
        },
        "/incrementors": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIncrementor"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Incrementor"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of incrementors.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "IncrementorAdmin",
                        "IncrementorReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Incrementor"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Incrementor"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Incrementor"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new incrementor.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "IncrementorAdmin"
                    ]
                }]
            }
        },
        "/incrementors/{incrementorID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Incrementor"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Incrementor"
                ],
                "parameters": [{
                    "name": "incrementorID",
                    "in": "path",
                    "description": "ID of the incrementor.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single incrementor.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "IncrementorAdmin",
                        "IncrementorReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Incrementor"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Incrementor"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Incrementor"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "incrementorID",
                    "in": "path",
                    "description": "ID of the incrementor.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update an incrementor.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "IncrementorAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Incrementor"
                ],
                "parameters": [{
                    "name": "incrementorID",
                    "in": "path",
                    "description": "ID of the incrementor.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete an incrementor.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "IncrementorAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Incrementor"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Incrementor"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Incrementor"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "incrementorID",
                    "in": "path",
                    "description": "ID of the incrementor.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update an incrementor.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "IncrementorAdmin"
                    ]
                }]
            }
        },
        "/me": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeUser"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Me"
                ],
                "parameters": [],
                "summary": "Get the Current Authenticated User",
                "description": "",
                "security": [{
                    "OAuth2": []
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeUser"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Me"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeUser"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Update the Currently Authenticated User",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MeAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeUser"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Me"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeUser"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Patch the Currently Authenticated User.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MeAdmin"
                    ]
                }]
            }
        },
        "/me/addresses": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListBuyerAddress"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListAddresses",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of addresses visible to this user.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MeAddressAdmin",
                        "Shopper"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BuyerAddress"
                                }
                            }
                        }
                    }
                },
                "operationId": "CreateAddress",
                "tags": [
                    "Me"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BuyerAddress"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new address.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MeAddressAdmin"
                    ]
                }]
            }
        },
        "/me/addresses/{addressID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BuyerAddress"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetAddress",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                    "name": "addressID",
                    "in": "path",
                    "description": "ID of the address.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single address.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MeAddressAdmin",
                        "Shopper"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BuyerAddress"
                                }
                            }
                        }
                    }
                },
                "operationId": "SaveAddress",
                "tags": [
                    "Me"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BuyerAddress"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "addressID",
                    "in": "path",
                    "description": "ID of the address.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update an address.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MeAddressAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Only available to Buyer Users."
                    }
                },
                "operationId": "DeleteAddress",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                    "name": "addressID",
                    "in": "path",
                    "description": "ID of the address.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete an address.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MeAddressAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "204": {
                        "description": "Only available to Buyer Users."
                    }
                },
                "operationId": "PatchAddress",
                "tags": [
                    "Me"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BuyerAddress"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "addressID",
                    "in": "path",
                    "description": "ID of the address.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update an address.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MeAddressAdmin"
                    ]
                }]
            }
        },
        "/me/catalogs": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCatalog"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListCatalogs",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of catalogs visible to this user.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/catalogs/{catalogID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Catalog"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetCatalog",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                    "name": "catalogID",
                    "in": "path",
                    "description": "ID of the catalog.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single catalog.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/categories": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCategory"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListCategories",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "depth",
                        "in": "query",
                        "description": "Depth of the category.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "catalogID",
                        "in": "query",
                        "description": "ID of the catalog.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productID",
                        "in": "query",
                        "description": "ID of the product.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of categories visible to this user.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/categories/{categoryID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetCategory",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "categoryID",
                        "in": "path",
                        "description": "ID of the category.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "catalogID",
                        "in": "query",
                        "description": "ID of the catalog.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single category.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/costcenters": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCostCenter"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListCostCenters",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of cost centers visible to this user.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/creditcards": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListBuyerCreditCard"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListCreditCards",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of credit cards visible to this user.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MeCreditCardAdmin",
                        "Shopper"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BuyerCreditCard"
                                }
                            }
                        }
                    }
                },
                "operationId": "CreateCreditCard",
                "tags": [
                    "Me"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BuyerCreditCard"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new credit card.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MeCreditCardAdmin"
                    ]
                }]
            }
        },
        "/me/creditcards/{creditcardID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BuyerCreditCard"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetCreditCard",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                    "name": "creditcardID",
                    "in": "path",
                    "description": "ID of the creditcard.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single credit card.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MeCreditCardAdmin",
                        "Shopper"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BuyerCreditCard"
                                }
                            }
                        }
                    }
                },
                "operationId": "SaveCreditCard",
                "tags": [
                    "Me"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BuyerCreditCard"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "creditcardID",
                    "in": "path",
                    "description": "ID of the creditcard.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a credit card.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MeCreditCardAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Only available to Buyer Users."
                    }
                },
                "operationId": "DeleteCreditCard",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                    "name": "creditcardID",
                    "in": "path",
                    "description": "ID of the creditcard.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete a credit card.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MeCreditCardAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "204": {
                        "description": "Only available to Buyer Users."
                    }
                },
                "operationId": "PatchCreditCard",
                "tags": [
                    "Me"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BuyerCreditCard"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "creditcardID",
                    "in": "path",
                    "description": "ID of the creditcard.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update a credit card.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MeCreditCardAdmin"
                    ]
                }]
            }
        },
        "/me/orders": {
            "get": {
                "responses": {
                    "200": {
                        "description": "List orders created by this user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOrder"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListOrders",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "from",
                        "in": "query",
                        "description": "Lower bound of date range that the order was created (if outgoing) or submitted (if incoming).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Upper bound of date range that the order was created (if outgoing) or submitted (if incoming).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of orders visible to this user.",
                "description": "List orders created by this user.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "TransferAnonUserOrder",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                    "name": "anonUserToken",
                    "in": "query",
                    "description": "Anon user token of the me.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Transfer an anon user order.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/orders/approvable": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOrder"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListApprovableOrders",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "from",
                        "in": "query",
                        "description": "Lower bound of date range that the order was created (if outgoing) or submitted (if incoming).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Upper bound of date range that the order was created (if outgoing) or submitted (if incoming).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of orders that this user can approve.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/password": {
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "ResetPasswordByToken",
                "tags": [
                    "Me"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenPasswordReset"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Reset a password by token.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PasswordReset"
                    ]
                }]
            }
        },
        "/me/products": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListBuyerProduct"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListProducts",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "catalogID",
                        "in": "query",
                        "description": "ID of the catalog.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryID",
                        "in": "query",
                        "description": "ID of the category.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "depth",
                        "in": "query",
                        "description": "Depth of the product.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of products visible to this user.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/products/{productID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BuyerProduct"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetProduct",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                    "name": "productID",
                    "in": "path",
                    "description": "ID of the product.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single product.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/products/{productID}/specs": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListBuyerSpec"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListSpecs",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "catalogID",
                        "in": "query",
                        "description": "ID of the catalog.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of specs visible to this user.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/products/{productID}/specs/{specID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BuyerSpec"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetSpec",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "specID",
                        "in": "path",
                        "description": "ID of the spec.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "catalogID",
                        "in": "query",
                        "description": "ID of the catalog.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single spec.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/promotions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListPromotion"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListPromotions",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of promotions visible to this user.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/promotions/{promotionID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Promotion"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetPromotion",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                    "name": "promotionID",
                    "in": "path",
                    "description": "ID of the promotion.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single promotion.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/register": {
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Authentication"
                                }
                            }
                        }
                    }
                },
                "operationId": "Register",
                "tags": [
                    "Me"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeUser"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "anonUserToken",
                    "in": "query",
                    "description": "Anon user token of the user.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Register a register.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/shipments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListShipment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListShipments",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "orderID",
                        "in": "query",
                        "description": "ID of the order.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of shipments visible to this user.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/shipments/{shipmentID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Shipment"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetShipment",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                    "name": "shipmentID",
                    "in": "path",
                    "description": "ID of the shipment.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single shipment.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/shipments/{shipmentID}/items": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListShipmentItem"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListShipmentItems",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "shipmentID",
                        "in": "path",
                        "description": "ID of the shipment.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "query",
                        "description": "ID of the order.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of shipment items visible to this user.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/spendingAccounts": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSpendingAccount"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListSpendingAccounts",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of spending accounts visible to this user.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/spendingaccounts/{spendingAccountID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpendingAccount"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetSpendingAccount",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                    "name": "spendingAccountID",
                    "in": "path",
                    "description": "ID of the spending account.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single spending account.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "Shopper"
                    ]
                }]
            }
        },
        "/me/usergroups": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Only available to Buyer Users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListUserGroups",
                "tags": [
                    "Me"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of user groups visible to this user.",
                "description": "Only available to Buyer Users.",
                "security": [{
                    "OAuth2": []
                }]
            }
        },
        "/messagesenders": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMessageSender"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Message Sender"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of message senders.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MessageConfigAssignmentAdmin"
                    ]
                }]
            }
        },
        "/messagesenders/{messageSenderID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageSender"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Message Sender"
                ],
                "parameters": [{
                    "name": "messageSenderID",
                    "in": "path",
                    "description": "ID of the message sender.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single message sender.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MessageConfigAssignmentAdmin"
                    ]
                }]
            }
        },
        "/messagesenders/{messageSenderID}/assignments": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteAssignment",
                "tags": [
                    "Message Sender"
                ],
                "parameters": [{
                        "name": "messageSenderID",
                        "in": "path",
                        "description": "ID of the message sender.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "buyerID",
                        "in": "query",
                        "description": "ID of the buyer.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplierID",
                        "in": "query",
                        "description": "ID of the supplier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a message sender assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MessageConfigAssignmentAdmin"
                    ]
                }]
            }
        },
        "/messagesenders/assignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMessageSenderAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListAssignments",
                "tags": [
                    "Message Sender"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "query",
                        "description": "ID of the buyer.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "messageSenderID",
                        "in": "query",
                        "description": "ID of the message sender.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Level of the message sender assignment. Possible values: User, Group, Company.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "supplierID",
                        "in": "query",
                        "description": "ID of the supplier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a list of message sender assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MessageConfigAssignmentAdmin"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveAssignment",
                "tags": [
                    "Message Sender"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageSenderAssignment"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create or update a message sender assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MessageConfigAssignmentAdmin"
                    ]
                }]
            }
        },
        "/messagesenders/CCListenerAssignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMessageCCListenerAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListCCListenerAssignments",
                "tags": [
                    "Message Sender"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of message sender cc listener assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MessageConfigAssignmentAdmin"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveCCListenerAssignment",
                "tags": [
                    "Message Sender"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageCCListenerAssignment"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create or update a message sender cc listener assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "MessageConfigAssignmentAdmin"
                    ]
                }]
            }
        },
        "/orders/{direction}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOrder"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Order"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "buyerID",
                        "in": "query",
                        "description": "ID of the buyer.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplierID",
                        "in": "query",
                        "description": "ID of the supplier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Lower bound of date range that the order was created.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Upper bound of date range that the order was created.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of orders.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "OrderReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "direction",
                    "in": "path",
                    "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "Incoming",
                            "Outgoing"
                        ]
                    }
                }],
                "summary": "Create a new order.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Order"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single order.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper",
                        "OrderReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update an order.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Order"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete an order.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update an order.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/approvals": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returns all Approvals associated with the Order.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOrderApproval"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListApprovals",
                "tags": [
                    "Order"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of order approvals.",
                "description": "Returns all Approvals associated with the Order.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper",
                        "OrderReader"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/approve": {
            "post": {
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "Approve",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderApprovalInfo"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Approve an order approve.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/billto": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Use only when the address is not to be saved/reused..To use a saved address (i.e. from the Addresses resource), PATCH the order's BillingAddressID property instead.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "SetBillingAddress",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Set a billing address.",
                "description": "Use only when the address is not to be saved/reused.<br/></br>To use a saved address (i.e. from the Addresses resource), PATCH the order's BillingAddressID property instead.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "Not allowed on unsubmitted orders where BillingAddressID has been set. In that case, use the Addresses resource to update the saved address.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "PatchBillingAddress",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update an order billing address.",
                "description": "Not allowed on unsubmitted orders where BillingAddressID has been set. In that case, use the Addresses resource to update the saved address.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/cancel": {
            "post": {
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "Cancel",
                "tags": [
                    "Order"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Cancel an order cancel.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/decline": {
            "post": {
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "Decline",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderApprovalInfo"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Decline an order decline.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/eligibleapprovers": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returns all Users who can approve or decline this order (but have not done so).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUser"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListEligibleApprovers",
                "tags": [
                    "Order"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of order eligible approvers.",
                "description": "Returns all Users who can approve or decline this order (but have not done so).",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper",
                        "OrderReader"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/fromuser": {
            "patch": {
                "responses": {
                    "200": {
                        "description": "Only FirstName, LastName, and Email can be updated..Primarily used to facilitate guest checkout scenarios.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "PatchFromUser",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Override order creator details.",
                "description": "Only FirstName, LastName, and Email can be updated.<br/></br>Primarily used to facilitate guest checkout scenarios.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/lineitems": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListLineItem"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Line Item"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of line items.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper",
                        "OrderReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LineItem"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Line Item"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LineItem"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create a new line item.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/lineitems/{lineItemID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LineItem"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Line Item"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineItemID",
                        "in": "path",
                        "description": "ID of the line item.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single line item.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper",
                        "OrderReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LineItem"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Line Item"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LineItem"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineItemID",
                        "in": "path",
                        "description": "ID of the line item.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update a line item.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Line Item"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineItemID",
                        "in": "path",
                        "description": "ID of the line item.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a line item.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LineItem"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Line Item"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LineItem"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineItemID",
                        "in": "path",
                        "description": "ID of the line item.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update a line item.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/lineitems/{lineItemID}/shipto": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Set the Shipping Address of the Line Item. Appropriate only when the Address is not to be saved/reused. To use a Saved Address (i.e. from the Addresses resource), PATCH the Line Item's ShippingAddressID property instead.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LineItem"
                                }
                            }
                        }
                    }
                },
                "operationId": "SetShippingAddress",
                "tags": [
                    "Line Item"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineItemID",
                        "in": "path",
                        "description": "ID of the line item.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Set a shipping address.",
                "description": "Set the Shipping Address of the Line Item. Appropriate only when the Address is not to be saved/reused. To use a Saved Address (i.e. from the Addresses resource), PATCH the Line Item's ShippingAddressID property instead.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "Partially update the Shipping Address of the Line Item. Not allowed on unsubmitted Line Items where ShippingAddressID has been set. In that case, use the Addresses resource to update the Saved Address.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LineItem"
                                }
                            }
                        }
                    }
                },
                "operationId": "PatchShippingAddress",
                "tags": [
                    "Line Item"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineItemID",
                        "in": "path",
                        "description": "ID of the line item.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update a line item shipping address.",
                "description": "Partially update the Shipping Address of the Line Item. Not allowed on unsubmitted Line Items where ShippingAddressID has been set. In that case, use the Addresses resource to update the Saved Address.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/payments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListPayment"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Payment"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of payments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper",
                        "OrderReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Payment"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Payment"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create a new payment.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/payments/{paymentID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Payment"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentID",
                        "in": "path",
                        "description": "ID of the payment.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single payment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper",
                        "OrderReader"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Payment"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentID",
                        "in": "path",
                        "description": "ID of the payment.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a payment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "PUT is not a supported method for payments due to the implications associated with modifying certain properties. Patch is only permitted on certain properties that vary depending on order status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Payment"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Payment"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentID",
                        "in": "path",
                        "description": "ID of the payment.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update a payment.",
                "description": "PUT is not a supported method for payments due to the implications associated with modifying certain properties. Patch is only permitted on certain properties that vary depending on order status",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/payments/{paymentID}/transactions": {
            "post": {
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    }
                },
                "operationId": "CreateTransaction",
                "tags": [
                    "Payment"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentTransaction"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentID",
                        "in": "path",
                        "description": "ID of the payment.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create a new payment transaction.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/payments/{paymentID}/transactions/{transactionID}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteTransaction",
                "tags": [
                    "Payment"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentID",
                        "in": "path",
                        "description": "ID of the payment.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "transactionID",
                        "in": "path",
                        "description": "ID of the transaction.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a payment transaction.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/promotions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOrderPromotion"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListPromotions",
                "tags": [
                    "Order"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of order promotions.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper",
                        "OrderReader"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/promotions/{promoCode}": {
            "post": {
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderPromotion"
                                }
                            }
                        }
                    }
                },
                "operationId": "AddPromotion",
                "tags": [
                    "Order"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "promoCode",
                        "in": "path",
                        "description": "Promo code of the order promotion.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Add a promotion to an order",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "RemovePromotion",
                "tags": [
                    "Order"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "promoCode",
                        "in": "path",
                        "description": "Promo code of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Remove a promotion from an order",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/ship": {
            "post": {
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "Ship",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Shipment"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create a new shipment containing all items on an order.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "ShipmentAdmin"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/shipto": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Use only when the address is not to be saved/reused. To use a saved address (i.e. from the Addresses resource), PATCH the order's ShippingAddressID property instead.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "SetShippingAddress",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Set a shipping address.",
                "description": "Use only when the address is not to be saved/reused. To use a saved address (i.e. from the Addresses resource), PATCH the order's ShippingAddressID property instead.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "Not allowed on unsubmitted orders where ShippingAddressID has been set. In that case, use the Addresses resource to update the saved address.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "PatchShippingAddress",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update an order shipping address.",
                "description": "Not allowed on unsubmitted orders where ShippingAddressID has been set. In that case, use the Addresses resource to update the saved address.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/orders/{direction}/{orderID}/submit": {
            "post": {
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "operationId": "Submit",
                "tags": [
                    "Order"
                ],
                "parameters": [{
                        "name": "direction",
                        "in": "path",
                        "description": "Direction of the order, from the current user's perspective. Possible values: incoming, outgoing.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Incoming",
                                "Outgoing"
                            ]
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Submit an order submit.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "OrderAdmin",
                        "Shopper"
                    ]
                }]
            }
        },
        "/password/reset": {
            "post": {
                "responses": {
                    "204": {
                        "description": "Sends a temporary verification code via email, which must subsequently be passed in a Reset Password call."
                    }
                },
                "operationId": "SendVerificationCode",
                "tags": [
                    "Forgotten Password"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetRequest"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Send a verification code.",
                "description": "Sends a temporary verification code via email, which must subsequently be passed in a Reset Password call.",
                "security": [{
                    "OAuth2": []
                }]
            }
        },
        "/password/reset/{verificationCode}": {
            "put": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "ResetPasswordByVerificationCode",
                "tags": [
                    "Forgotten Password"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordReset"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "verificationCode",
                    "in": "path",
                    "description": "Verification code of the password reset.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Reset a password by verification code.",
                "description": "",
                "security": [{
                    "OAuth2": []
                }]
            }
        },
        "/priceschedules": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListPriceSchedule"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Price Schedule"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of price schedules.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PriceScheduleAdmin",
                        "PriceScheduleReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceSchedule"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Price Schedule"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PriceSchedule"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new price schedule.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PriceScheduleAdmin"
                    ]
                }]
            }
        },
        "/priceschedules/{priceScheduleID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceSchedule"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Price Schedule"
                ],
                "parameters": [{
                    "name": "priceScheduleID",
                    "in": "path",
                    "description": "ID of the price schedule.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single price schedule.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PriceScheduleAdmin",
                        "PriceScheduleReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceSchedule"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Price Schedule"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PriceSchedule"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "priceScheduleID",
                    "in": "path",
                    "description": "ID of the price schedule.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a price schedule.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PriceScheduleAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Price Schedule"
                ],
                "parameters": [{
                    "name": "priceScheduleID",
                    "in": "path",
                    "description": "ID of the price schedule.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete a price schedule.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PriceScheduleAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceSchedule"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Price Schedule"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PriceSchedule"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "priceScheduleID",
                    "in": "path",
                    "description": "ID of the price schedule.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update a price schedule.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PriceScheduleAdmin"
                    ]
                }]
            }
        },
        "/priceschedules/{priceScheduleID}/PriceBreaks": {
            "post": {
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceSchedule"
                                }
                            }
                        }
                    }
                },
                "operationId": "SavePriceBreak",
                "tags": [
                    "Price Schedule"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PriceBreak"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "priceScheduleID",
                    "in": "path",
                    "description": "ID of the price schedule.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a price schedule price break.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PriceScheduleAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeletePriceBreak",
                "tags": [
                    "Price Schedule"
                ],
                "parameters": [{
                        "name": "priceScheduleID",
                        "in": "path",
                        "description": "ID of the price schedule.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Quantity of the price schedule.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Delete a price schedule price break.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PriceScheduleAdmin"
                    ]
                }]
            }
        },
        "/productfacets": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListProductFacet"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Product Facet"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of product facets.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductFacetAdmin",
                        "ProductFacetReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductFacet"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Product Facet"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductFacet"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new product facet.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductFacetAdmin"
                    ]
                }]
            }
        },
        "/productfacets/{productFacetID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductFacet"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Product Facet"
                ],
                "parameters": [{
                    "name": "productFacetID",
                    "in": "path",
                    "description": "ID of the product facet.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single product facet.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductFacetAdmin",
                        "ProductFacetReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductFacet"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Product Facet"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductFacet"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "productFacetID",
                    "in": "path",
                    "description": "ID of the product facet.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a product facet.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductFacetAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Product Facet"
                ],
                "parameters": [{
                    "name": "productFacetID",
                    "in": "path",
                    "description": "ID of the product facet.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete a product facet.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductFacetAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductFacet"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Product Facet"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductFacet"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "productFacetID",
                    "in": "path",
                    "description": "ID of the product facet.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update a product facet.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductFacetAdmin"
                    ]
                }]
            }
        },
        "/products": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListProduct"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Product"
                ],
                "parameters": [{
                        "name": "catalogID",
                        "in": "query",
                        "description": "ID of the catalog.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryID",
                        "in": "query",
                        "description": "ID of the category.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplierID",
                        "in": "query",
                        "description": "ID of the supplier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of products.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin",
                        "ProductReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Product"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new product.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            }
        },
        "/products/{productID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Product"
                ],
                "parameters": [{
                    "name": "productID",
                    "in": "path",
                    "description": "ID of the product.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single product.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin",
                        "ProductReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Product"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "productID",
                    "in": "path",
                    "description": "ID of the product.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a product.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Product"
                ],
                "parameters": [{
                    "name": "productID",
                    "in": "path",
                    "description": "ID of the product.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete a product.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Product"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "productID",
                    "in": "path",
                    "description": "ID of the product.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update a product.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            }
        },
        "/products/{productID}/assignments/{buyerID}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteAssignment",
                "tags": [
                    "Product"
                ],
                "parameters": [{
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "buyerID",
                        "in": "path",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a product assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin",
                        "ProductAssignmentAdmin"
                    ]
                }]
            }
        },
        "/products/{productID}/suppliers": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSupplier"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListSuppliers",
                "tags": [
                    "Product"
                ],
                "parameters": [{
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of product suppliers.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin",
                        "ProductReader"
                    ]
                }]
            }
        },
        "/products/{productID}/suppliers/{supplierID}": {
            "put": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveSupplier",
                "tags": [
                    "Product"
                ],
                "parameters": [{
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update a product supplier.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "RemoveSupplier",
                "tags": [
                    "Product"
                ],
                "parameters": [{
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Remove a supplier.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            }
        },
        "/products/{productID}/variants": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListVariant"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListVariants",
                "tags": [
                    "Product"
                ],
                "parameters": [{
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of product variants.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin",
                        "ProductReader"
                    ]
                }]
            }
        },
        "/products/{productID}/variants/{variantID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Variant"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetVariant",
                "tags": [
                    "Product"
                ],
                "parameters": [{
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variantID",
                        "in": "path",
                        "description": "ID of the variant.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single product variant.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin",
                        "ProductReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Variant"
                                }
                            }
                        }
                    }
                },
                "operationId": "SaveVariant",
                "tags": [
                    "Product"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Variant"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variantID",
                        "in": "path",
                        "description": "ID of the variant.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update a product variant.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Variant"
                                }
                            }
                        }
                    }
                },
                "operationId": "PatchVariant",
                "tags": [
                    "Product"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Variant"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variantID",
                        "in": "path",
                        "description": "ID of the variant.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update a product variant.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            }
        },
        "/products/{productID}/variants/generate": {
            "post": {
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    }
                },
                "operationId": "GenerateVariants",
                "tags": [
                    "Product"
                ],
                "parameters": [{
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "overwriteExisting",
                        "in": "query",
                        "description": "Overwrite existing of the product.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "summary": "Generate a variants.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            }
        },
        "/products/assignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListProductAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListAssignments",
                "tags": [
                    "Product"
                ],
                "parameters": [{
                        "name": "productID",
                        "in": "query",
                        "description": "ID of the product.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priceScheduleID",
                        "in": "query",
                        "description": "ID of the price schedule.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "buyerID",
                        "in": "query",
                        "description": "ID of the buyer.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Level of the product assignment. Possible values: User, Group, Company.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of product assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin",
                        "ProductAssignmentAdmin",
                        "ProductReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveAssignment",
                "tags": [
                    "Product"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductAssignment"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create or update a product assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin",
                        "ProductAssignmentAdmin"
                    ]
                }]
            }
        },
        "/promotions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListPromotion"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Promotion"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of promotions.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PromotionAdmin",
                        "PromotionReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Promotion"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Promotion"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Promotion"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new promotion.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PromotionAdmin"
                    ]
                }]
            }
        },
        "/promotions/{promotionID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Promotion"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Promotion"
                ],
                "parameters": [{
                    "name": "promotionID",
                    "in": "path",
                    "description": "ID of the promotion.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single promotion.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PromotionAdmin",
                        "PromotionReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Promotion"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Promotion"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Promotion"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "promotionID",
                    "in": "path",
                    "description": "ID of the promotion.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a promotion.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PromotionAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Promotion"
                ],
                "parameters": [{
                    "name": "promotionID",
                    "in": "path",
                    "description": "ID of the promotion.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete a promotion.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PromotionAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Promotion"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Promotion"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Promotion"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "promotionID",
                    "in": "path",
                    "description": "ID of the promotion.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update a promotion.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PromotionAdmin"
                    ]
                }]
            }
        },
        "/promotions/{promotionID}/assignments": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteAssignment",
                "tags": [
                    "Promotion"
                ],
                "parameters": [{
                        "name": "promotionID",
                        "in": "path",
                        "description": "ID of the promotion.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "buyerID",
                        "in": "query",
                        "description": "ID of the buyer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a promotion assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PromotionAdmin"
                    ]
                }]
            }
        },
        "/promotions/assignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListPromotionAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListAssignments",
                "tags": [
                    "Promotion"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "query",
                        "description": "ID of the buyer.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "promotionID",
                        "in": "query",
                        "description": "ID of the promotion.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Level of the promotion assignment. Possible values: User, Group, Company.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of promotion assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PromotionAdmin",
                        "PromotionReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveAssignment",
                "tags": [
                    "Promotion"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PromotionAssignment"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create or update a promotion assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "PromotionAdmin"
                    ]
                }]
            }
        },
        "/securityprofiles": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSecurityProfile"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Security Profile"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of security profiles.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SetSecurityProfile"
                    ]
                }]
            }
        },
        "/securityprofiles/{securityProfileID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityProfile"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Security Profile"
                ],
                "parameters": [{
                    "name": "securityProfileID",
                    "in": "path",
                    "description": "ID of the security profile.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single security profile.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SetSecurityProfile"
                    ]
                }]
            }
        },
        "/securityprofiles/{securityProfileID}/assignments": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteAssignment",
                "tags": [
                    "Security Profile"
                ],
                "parameters": [{
                        "name": "securityProfileID",
                        "in": "path",
                        "description": "ID of the security profile.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "buyerID",
                        "in": "query",
                        "description": "ID of the buyer.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplierID",
                        "in": "query",
                        "description": "ID of the supplier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a security profile assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SetSecurityProfile"
                    ]
                }]
            }
        },
        "/securityprofiles/assignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSecurityProfileAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListAssignments",
                "tags": [
                    "Security Profile"
                ],
                "parameters": [{
                        "name": "buyerID",
                        "in": "query",
                        "description": "ID of the buyer.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplierID",
                        "in": "query",
                        "description": "ID of the supplier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "securityProfileID",
                        "in": "query",
                        "description": "ID of the security profile.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "commerceRole",
                        "in": "query",
                        "description": "Commerce role of the security profile assignment. Possible values: Buyer, Seller, Supplier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Level of the security profile assignment. Possible values: User, Group, Company.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of security profile assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SetSecurityProfile"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveAssignment",
                "tags": [
                    "Security Profile"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SecurityProfileAssignment"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create or update a security profile assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SetSecurityProfile"
                    ]
                }]
            }
        },
        "/shipments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListShipment"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Shipment"
                ],
                "parameters": [{
                        "name": "orderID",
                        "in": "query",
                        "description": "ID of the order.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of shipments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ShipmentAdmin",
                        "ShipmentReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Shipment"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Shipment"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Shipment"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new shipment.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ShipmentAdmin"
                    ]
                }]
            }
        },
        "/shipments/{shipmentID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Shipment"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Shipment"
                ],
                "parameters": [{
                    "name": "shipmentID",
                    "in": "path",
                    "description": "ID of the shipment.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single shipment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ShipmentAdmin",
                        "ShipmentReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Shipment"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Shipment"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Shipment"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "shipmentID",
                    "in": "path",
                    "description": "ID of the shipment.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a shipment.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ShipmentAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Shipment"
                ],
                "parameters": [{
                    "name": "shipmentID",
                    "in": "path",
                    "description": "ID of the shipment.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete a shipment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ShipmentAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Shipment"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Shipment"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Shipment"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "shipmentID",
                    "in": "path",
                    "description": "ID of the shipment.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update a shipment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ShipmentAdmin"
                    ]
                }]
            }
        },
        "/shipments/{shipmentID}/items": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListShipmentItem"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListItems",
                "tags": [
                    "Shipment"
                ],
                "parameters": [{
                        "name": "shipmentID",
                        "in": "path",
                        "description": "ID of the shipment.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of shipment items.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ShipmentAdmin",
                        "ShipmentReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentItem"
                                }
                            }
                        }
                    }
                },
                "operationId": "SaveItem",
                "tags": [
                    "Shipment"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipmentItem"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "shipmentID",
                    "in": "path",
                    "description": "ID of the shipment.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a shipment item.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ShipmentAdmin"
                    ]
                }]
            }
        },
        "/shipments/{shipmentID}/items/{orderID}/{lineItemID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentItem"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetItem",
                "tags": [
                    "Shipment"
                ],
                "parameters": [{
                        "name": "shipmentID",
                        "in": "path",
                        "description": "ID of the shipment.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineItemID",
                        "in": "path",
                        "description": "ID of the line item.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single shipment item.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ShipmentAdmin",
                        "ShipmentReader"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteItem",
                "tags": [
                    "Shipment"
                ],
                "parameters": [{
                        "name": "shipmentID",
                        "in": "path",
                        "description": "ID of the shipment.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderID",
                        "in": "path",
                        "description": "ID of the order.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineItemID",
                        "in": "path",
                        "description": "ID of the line item.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a shipment item.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ShipmentAdmin"
                    ]
                }]
            }
        },
        "/specs": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSpec"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Spec"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of specs.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin",
                        "ProductReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Spec"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Spec"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Spec"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new spec.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            }
        },
        "/specs/{specID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Spec"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Spec"
                ],
                "parameters": [{
                    "name": "specID",
                    "in": "path",
                    "description": "ID of the spec.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single spec.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin",
                        "ProductReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Spec"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Spec"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Spec"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "specID",
                    "in": "path",
                    "description": "ID of the spec.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a spec.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Spec"
                ],
                "parameters": [{
                    "name": "specID",
                    "in": "path",
                    "description": "ID of the spec.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete a spec.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Spec"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Spec"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Spec"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "specID",
                    "in": "path",
                    "description": "ID of the spec.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update a spec.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            }
        },
        "/specs/{specID}/options": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSpecOption"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListOptions",
                "tags": [
                    "Spec"
                ],
                "parameters": [{
                        "name": "specID",
                        "in": "path",
                        "description": "ID of the spec.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of spec options.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin",
                        "ProductReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "A Spec can have multiple Options-- for example, if the spec is called 'Color', the options might be 'Blue', 'Red', and 'Green'. ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecOption"
                                }
                            }
                        }
                    }
                },
                "operationId": "CreateOption",
                "tags": [
                    "Spec"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecOption"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "specID",
                    "in": "path",
                    "description": "ID of the spec.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create a new spec option.",
                "description": "A Spec can have multiple Options-- for example, if the spec is called 'Color', the options might be 'Blue', 'Red', and 'Green'. ",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            }
        },
        "/specs/{specID}/options/{optionID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecOption"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetOption",
                "tags": [
                    "Spec"
                ],
                "parameters": [{
                        "name": "specID",
                        "in": "path",
                        "description": "ID of the spec.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "optionID",
                        "in": "path",
                        "description": "ID of the option.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single spec option.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin",
                        "ProductReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecOption"
                                }
                            }
                        }
                    }
                },
                "operationId": "SaveOption",
                "tags": [
                    "Spec"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecOption"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "specID",
                        "in": "path",
                        "description": "ID of the spec.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "optionID",
                        "in": "path",
                        "description": "ID of the option.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update a spec option.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteOption",
                "tags": [
                    "Spec"
                ],
                "parameters": [{
                        "name": "specID",
                        "in": "path",
                        "description": "ID of the spec.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "optionID",
                        "in": "path",
                        "description": "ID of the option.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a spec option.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecOption"
                                }
                            }
                        }
                    }
                },
                "operationId": "PatchOption",
                "tags": [
                    "Spec"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecOption"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "specID",
                        "in": "path",
                        "description": "ID of the spec.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "optionID",
                        "in": "path",
                        "description": "ID of the option.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update a spec option.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            }
        },
        "/specs/{specID}/productassignments/{productID}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteProductAssignment",
                "tags": [
                    "Spec"
                ],
                "parameters": [{
                        "name": "specID",
                        "in": "path",
                        "description": "ID of the spec.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productID",
                        "in": "path",
                        "description": "ID of the product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a spec product assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            }
        },
        "/specs/productassignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSpecProductAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListProductAssignments",
                "tags": [
                    "Spec"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of spec product assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin",
                        "ProductReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveProductAssignment",
                "tags": [
                    "Spec"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecProductAssignment"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create or update a spec product assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ProductAdmin"
                    ]
                }]
            }
        },
        "/suppliers": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListSupplier"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Supplier"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of suppliers.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierAdmin",
                        "SupplierReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Supplier"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new supplier.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierAdmin"
                    ]
                }]
            }
        },
        "/suppliers/{supplierID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Supplier"
                ],
                "parameters": [{
                    "name": "supplierID",
                    "in": "path",
                    "description": "ID of the supplier.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single supplier.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierAdmin",
                        "SupplierReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Supplier"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "supplierID",
                    "in": "path",
                    "description": "ID of the supplier.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a supplier.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Supplier"
                ],
                "parameters": [{
                    "name": "supplierID",
                    "in": "path",
                    "description": "ID of the supplier.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete a supplier.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Supplier"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "supplierID",
                    "in": "path",
                    "description": "ID of the supplier.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update a supplier.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierAdmin"
                    ]
                }]
            }
        },
        "/suppliers/{supplierID}/addresses": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAddress"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Supplier Address"
                ],
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of supplier addresses.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierAddressAdmin",
                        "SupplierAddressReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Supplier Address"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "supplierID",
                    "in": "path",
                    "description": "ID of the supplier.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create a new supplier address.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierAddressAdmin"
                    ]
                }]
            }
        },
        "/suppliers/{supplierID}/addresses/{addressID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Supplier Address"
                ],
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addressID",
                        "in": "path",
                        "description": "ID of the address.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single supplier address.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierAddressAdmin",
                        "SupplierAddressReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Supplier Address"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addressID",
                        "in": "path",
                        "description": "ID of the address.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update a supplier address.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierAddressAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Supplier Address"
                ],
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addressID",
                        "in": "path",
                        "description": "ID of the address.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a supplier address.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierAddressAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Supplier Address"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Address"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addressID",
                        "in": "path",
                        "description": "ID of the address.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update a supplier address.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierAddressAdmin"
                    ]
                }]
            }
        },
        "/suppliers/{supplierID}/ApiClients/Assignments/{apiClientID}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteSupplierAssignment",
                "tags": [
                    "Api Client"
                ],
                "parameters": [{
                        "name": "apiClientID",
                        "in": "path",
                        "description": "ID of the api client.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete an api client supplier assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "ApiClientAdmin"
                    ]
                }]
            }
        },
        "/suppliers/{supplierID}/usergroups": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Supplier User Group"
                ],
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of supplier user groups.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserGroupAdmin",
                        "SupplierUserGroupReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Supplier User Group"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "supplierID",
                    "in": "path",
                    "description": "ID of the supplier.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create a new supplier user group.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserGroupAdmin"
                    ]
                }]
            }
        },
        "/suppliers/{supplierID}/usergroups/{userGroupID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Supplier User Group"
                ],
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "path",
                        "description": "ID of the user group.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single supplier user group.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserGroupAdmin",
                        "SupplierUserGroupReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Supplier User Group"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "path",
                        "description": "ID of the user group.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update a supplier user group.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserGroupAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Supplier User Group"
                ],
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "path",
                        "description": "ID of the user group.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a supplier user group.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserGroupAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Supplier User Group"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "path",
                        "description": "ID of the user group.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update a supplier user group.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserGroupAdmin"
                    ]
                }]
            }
        },
        "/suppliers/{supplierID}/usergroups/{userGroupID}/assignments/{userID}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteUserAssignment",
                "tags": [
                    "Supplier User Group"
                ],
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "path",
                        "description": "ID of the user group.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a supplier user group user assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserGroupAdmin"
                    ]
                }]
            }
        },
        "/suppliers/{supplierID}/usergroups/assignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUserGroupAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListUserAssignments",
                "tags": [
                    "Supplier User Group"
                ],
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of supplier user group user assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserGroupAdmin",
                        "SupplierUserGroupReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveUserAssignment",
                "tags": [
                    "Supplier User Group"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroupAssignment"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "supplierID",
                    "in": "path",
                    "description": "ID of the supplier.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update a supplier user group user assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserGroupAdmin"
                    ]
                }]
            }
        },
        "/suppliers/{supplierID}/users": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUser"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Supplier User"
                ],
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of supplier users.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserAdmin",
                        "SupplierUserReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Supplier User"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "supplierID",
                    "in": "path",
                    "description": "ID of the supplier.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create a new supplier user.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserAdmin"
                    ]
                }]
            }
        },
        "/suppliers/{supplierID}/users/{userID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Supplier User"
                ],
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single supplier user.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserAdmin",
                        "SupplierUserReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Supplier User"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Create or update a supplier user.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Supplier User"
                ],
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete a supplier user.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Supplier User"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Partially update a supplier user.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserAdmin"
                    ]
                }]
            }
        },
        "/suppliers/{supplierID}/users/{userID}/accesstoken": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessToken"
                                }
                            }
                        }
                    }
                },
                "operationId": "GetAccessToken",
                "tags": [
                    "Supplier User"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImpersonateTokenRequest"
                            }
                        }
                    }
                },
                "parameters": [{
                        "name": "supplierID",
                        "in": "path",
                        "description": "ID of the supplier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Get a single supplier user access token.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "SupplierUserAdmin"
                    ]
                }]
            }
        },
        "/usergroups": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "List",
                "tags": [
                    "Admin User Group"
                ],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Word or phrase to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchOn",
                        "in": "query",
                        "description": "Comma-delimited list of fields to search on.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Comma-delimited list of fields to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Any additional key/value pairs passed in the query string are interpretted as filters. Valid keys are top-level properties of the returned model or 'xp.???'",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "summary": "Get a list of admin user groups.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserGroupAdmin",
                        "AdminUserGroupReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "Create",
                "tags": [
                    "Admin User Group"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create a new admin user group.",
                "description": "If ID is provided and an object with that ID already exists, a 409 (conflict) error is returned.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserGroupAdmin"
                    ]
                }]
            }
        },
        "/usergroups/{userGroupID}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "Get",
                "tags": [
                    "Admin User Group"
                ],
                "parameters": [{
                    "name": "userGroupID",
                    "in": "path",
                    "description": "ID of the user group.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Get a single admin user group.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserGroupAdmin",
                        "AdminUserGroupReader"
                    ]
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "If an object with the same ID already exists, it will be overwritten.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "Save",
                "tags": [
                    "Admin User Group"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "userGroupID",
                    "in": "path",
                    "description": "ID of the user group.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Create or update an admin user group.",
                "description": "If an object with the same ID already exists, it will be overwritten.",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserGroupAdmin"
                    ]
                }]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "Delete",
                "tags": [
                    "Admin User Group"
                ],
                "parameters": [{
                    "name": "userGroupID",
                    "in": "path",
                    "description": "ID of the user group.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Delete an admin user group.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserGroupAdmin"
                    ]
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    }
                },
                "operationId": "Patch",
                "tags": [
                    "Admin User Group"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup"
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "userGroupID",
                    "in": "path",
                    "description": "ID of the user group.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "summary": "Partially update an admin user group.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserGroupAdmin"
                    ]
                }]
            }
        },
        "/usergroups/{userGroupID}/assignments/{userID}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "DeleteUserAssignment",
                "tags": [
                    "Admin User Group"
                ],
                "parameters": [{
                        "name": "userGroupID",
                        "in": "path",
                        "description": "ID of the user group.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "Delete an admin user group user assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserGroupAdmin"
                    ]
                }]
            }
        },
        "/usergroups/assignments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUserGroupAssignment"
                                }
                            }
                        }
                    }
                },
                "operationId": "ListUserAssignments",
                "tags": [
                    "Admin User Group"
                ],
                "parameters": [{
                        "name": "userGroupID",
                        "in": "query",
                        "description": "ID of the user group.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "query",
                        "description": "ID of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page of results to return. Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of results to return per page. Default: 20, max: 100.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "summary": "Get a list of admin user group user assignments.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserGroupAdmin",
                        "AdminUserGroupReader"
                    ]
                }]
            },
            "post": {
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "operationId": "SaveUserAssignment",
                "tags": [
                    "Admin User Group"
                ],
                "requestBody": {
                    "required": true,
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroupAssignment"
                            }
                        }
                    }
                },
                "parameters": [],
                "summary": "Create or update an admin user group user assignment.",
                "description": "",
                "security": [{
                    "OAuth2": [
                        "FullAccess",
                        "AdminUserGroupAdmin"
                    ]
                }]
            }
        }
    }
}